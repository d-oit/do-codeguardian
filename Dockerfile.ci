# Multi-stage Docker build for CodeGuardian CI scanning
FROM rust:1.75-slim AS builder

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency files
COPY Cargo.toml Cargo.lock ./

# Create dummy src to cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build --release --features full && rm -rf src target/release/deps/do_codeguardian*

# Copy source code
COPY src ./src
COPY build.rs ./

# Build the application
RUN cargo build --release --features full

# Runtime stage
FROM debian:bookworm-slim

RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY --from=builder /app/target/release/do-codeguardian /app/do-codeguardian

# Create non-root user
RUN useradd --create-home --shell /bin/bash codeguardian
USER codeguardian

ENTRYPOINT ["/app/do-codeguardian"]
