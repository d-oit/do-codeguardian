---
name: Verify Build for CodeQL (Updated)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Default permissions
permissions:
  contents: read

jobs:
  verify-build:
    name: Verify Build
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable]
        target: [x86_64-unknown-linux-gnu]
        include:
          - rust_version: stable
            target: x86_64-unknown-linux-gnu
            features: "default"
          - rust_version: stable
            target: x86_64-unknown-linux-gnu
            features: "full"
          - rust_version: stable
            target: x86_64-unknown-linux-gnu
            features: "dev"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 1

    - name: Setup Rust (${{ matrix.rust_version }})
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.features }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ matrix.target }}-${{ matrix.features }}-
          ${{ runner.os }}-cargo-${{ matrix.target }}-
          ${{ runner.os }}-cargo-

    - name: Setup CI Build Environment
      run: |
        chmod +x scripts/ci-build-optimization.sh
        if [ -f "./scripts/ci-build-optimization.sh" ]; then ./scripts/ci-build-optimization.sh setup; else echo "Script not found, skipping setup"; fi

    - name: Verify build with ${{ matrix.features }} features
      timeout-minutes: 15
      run: |
        echo "Building with features: ${{ matrix.features }}"

        case "${{ matrix.features }}" in
          "default")
            ./scripts/ci-build-optimization.sh features
            ;;
          "full")
            if ! cargo build --release --features full --quiet; then
              echo "❌ Full features build failed"
              exit 1
            fi
            ;;
          "dev")
            if ! cargo build --features dev --quiet; then
              echo "❌ Dev features build failed"
              exit 1
            fi
            ;;
          *)
            if ! cargo build --release --all-features --quiet; then
              echo "❌ All features build failed"
              exit 1
            fi
            ;;
        esac

        echo "✅ Build verification completed for ${{ matrix.features }} features"

    - name: Verify CodeQL configuration
      run: |
        echo "Verifying CodeQL configuration..."

        if [ ! -f ".github/codeql-config.yml" ]; then
          echo "❌ CodeQL configuration file missing"
          exit 1
        fi

        echo "✅ CodeQL configuration verified"

    - name: Verify build artifacts
      run: |
        echo "Verifying build artifacts..."

        if [ ! -f "target/${{ matrix.target }}/release/do-codeguardian" ]; then
          echo "❌ Release binary not found"
          exit 1
        fi

        echo "✅ Build artifacts verified"

## Build Time Measurement Enhancement

Add this step to measure build times in CI:

```yaml
- name: Measure Build Time
  run: |
    START_TIME=$(date +%s)
    cargo build --release --features ${{ matrix.features }}
    END_TIME=$(date +%s)
    BUILD_TIME=$((END_TIME - START_TIME))
    echo "Build time: ${BUILD_TIME}s" >> $GITHUB_STEP_SUMMARY
    echo "build_time=${BUILD_TIME}" >> $GITHUB_OUTPUT
```

## sccache Integration

Add sccache for faster builds:

```yaml
- name: Setup sccache
  uses: mozilla-actions/sccache-action@v0.0.9

- name: Setup Rust
  uses: dtolnay/rust-toolchain@stable
  with:
    targets: ${{ matrix.target }}

- name: Build with sccache
  run: |
    export RUSTC_WRAPPER=sccache
    cargo build --release --features ${{ matrix.features }}
```
