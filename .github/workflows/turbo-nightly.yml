name: 🌙 Nightly Turbo Analysis

on:
  schedule:
    # Run comprehensive nightly analysis at 1 AM UTC
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  comprehensive-analysis:
    name: 🔍 Comprehensive Nightly Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🦀 Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        cache: true

    - name: 🔨 Build CodeGuardian
      run: cargo build --release --quiet

    - name: 🚀 Full Turbo Analysis
      run: |
        echo "🚀 Running comprehensive nightly analysis..."

        ./target/release/do-codeguardian turbo . \
          --aggressive \
          --max-parallel 16 \
          --memory-limit 2048 \
          --format json \
          --output nightly-analysis.json \
          --metrics

    - name: 📊 Generate Nightly Report
      run: |
        echo "📊 Nightly Analysis Report - $(date)" > nightly-report.md
        echo "=================================" >> nightly-report.md
        echo "" >> nightly-report.md

        if [ -f "nightly-analysis.json" ]; then
          FINDINGS=$(jq '.summary.total_findings' nightly-analysis.json)
          FILES=$(jq '.summary.total_files_scanned' nightly-analysis.json)
          DURATION=$(jq '.summary.scan_duration_ms' nightly-analysis.json)

          echo "## 📈 Summary" >> nightly-report.md
          echo "- **Files analyzed:** $FILES" >> nightly-report.md
          echo "- **Total findings:** $FINDINGS" >> nightly-report.md
          echo "- **Analysis duration:** ${DURATION}ms" >> nightly-report.md
          echo "" >> nightly-report.md

          # Findings by severity
          echo "## 🎯 Findings by Severity" >> nightly-report.md
          jq -r '.findings | group_by(.severity) | .[] |
            "- **\(.[0].severity):** \(length) findings"' \
            nightly-analysis.json >> nightly-report.md
          echo "" >> nightly-report.md

          # Top issues
          echo "## 🔍 Top Security Issues" >> nightly-report.md
          jq -r '.findings[] |
            select(.severity == "Critical" or .severity == "High") |
            "- \(.severity): \(.message) (\(.file | split("/") | last):\(.line))"' \
            nightly-analysis.json | head -10 >> nightly-report.md
        fi

    - name: 📤 Upload Nightly Results
      uses: actions/upload-artifact@v4
      with:
        name: nightly-analysis-${{ github.run_number }}
        path: |
          nightly-analysis.json
          nightly-report.md
        retention-days: 30
