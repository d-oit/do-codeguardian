{
  "schema_version": "1.0.0",
  "tool_metadata": {
    "name": "codeguardian",
    "version": "0.1.0",
    "config_hash": "063df732c3ec1222",
    "timestamp": "2025-08-18T07:57:57.269875839Z"
  },
  "findings": [
    {
      "id": "a6fb5a7cbebf4223",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 34,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "966c2f69c22b99da",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 357,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "5ba5bdd1393f0611",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 184,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "3c3e44192c4a8fa2",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 296,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "32a4169768183418",
      "analyzer": "security",
      "rule": "hardcoded_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 296,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Hardcoded secrets in source code pose a security risk",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "50b57079dbef6210",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 170,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "857b353da5edd062",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 154,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "1a4b0aaf373c277d",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 155,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "c0ba0a36d6b97486",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 156,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "2e3d997307f1bf30",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 189,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "d5f1142f96547f6c",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 7,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "0a63d9f2979bee95",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 8,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "7bd88dd798366957",
      "analyzer": "non_production",
      "rule": "potential_secret",
      "severity": "Critical",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 10,
      "column": null,
      "message": "Potential hardcoded secret detected",
      "description": "Line may contain hardcoded credentials or API keys",
      "suggestion": "Move secrets to environment variables or secure configuration",
      "metadata": {}
    },
    {
      "id": "b2f08a3a4cd402eb",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 66,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "3d83d6dfa5b92405",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 130,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "43b99ef6d0f26839",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 134,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "35372b54a801c807",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 24,
      "column": null,
      "message": "Function 'new' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "e60109fc83d527b4",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 57,
      "column": null,
      "message": "Function 'analyze_line' has high cyclomatic complexity (16)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "3e6e0a3b792ca6ec",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 147,
      "column": null,
      "message": "Function 'analyze_file_structure' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "1203673282ace317",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 195,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "ad1cc079fddae282",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 198,
      "column": null,
      "message": "Function 'analyze_function_complexity' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "03481240791e843b",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 204,
      "column": null,
      "message": "Function 'for' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "72ae5af4db13ee55",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 286,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (17)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a6632facb12a1f9d",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 289,
      "column": null,
      "message": "Function 'check_import_organization' has high cyclomatic complexity (17)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "1b7497ba12d0843e",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 292,
      "column": null,
      "message": "Function 'Some' has high cyclomatic complexity (17)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "c52ee9b6a6d15d60",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 348,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "7ca95577969d897c",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 365,
      "column": null,
      "message": "Function 'is_commented_code' has high cyclomatic complexity (78)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "1070dc5d7c5727c1",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 415,
      "column": null,
      "message": "Function 'extract_function_body' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "58f18c0f40bf9f99",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 521,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "a263471497b6e830",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 581,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "93b1fc688553de4b",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 605,
      "column": null,
      "message": "Function 'check_naming_for_language' has high cyclomatic complexity (19)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "187d78f4202836a6",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 19,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "271825245128a5d3",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 92,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (28)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "b457109647766e98",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 95,
      "column": null,
      "message": "Function 'check_dependencies' has high cyclomatic complexity (28)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "9b5682b4a6097f25",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 103,
      "column": null,
      "message": "Function 'for' has high cyclomatic complexity (28)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "69436a591e224678",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 131,
      "column": null,
      "message": "Function 'Some' has high cyclomatic complexity (17)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "254411b6e22db609",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 165,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "7912b7c7b4a530bc",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 168,
      "column": null,
      "message": "Function 'check_rust_dependencies' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "9f560fb60c0a419a",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 171,
      "column": null,
      "message": "Function 'for' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "0a34e5c180d5716a",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 173,
      "column": null,
      "message": "Function 'Some' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "0f910226347f1bc5",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 90,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (15)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "6120bd5f4592dd49",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 93,
      "column": null,
      "message": "Function 'check_json_formatting' has high cyclomatic complexity (15)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "1fb749679915ff56",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 10,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "f464989d09574dfb",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 18,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "1a901b4fe1d8c6bb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 18,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1c0a2495984de4f4",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 19,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "8a2a38b9d1520ba8",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 23,
      "column": null,
      "message": "Function 'check_non_production_code' has high cyclomatic complexity (18)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "c340555355037eb0",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 27,
      "column": null,
      "message": "Function 'for' has high cyclomatic complexity (18)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "735000fff99ff05c",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 34,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "dd6bc0096796223e",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 55,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "da850fbe5754a315",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 56,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "8c44288e66f01e59",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 57,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "240b46575788d695",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 57,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3baa72a70fb78180",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 66,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "6fc6592f79f2e61f",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 70,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5c96cfe96b681331",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 72,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "3a33dd59260ee6b3",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 73,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "c604059964456488",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 121,
      "column": null,
      "message": "Function 'contains_potential_secret' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "6f6370fc5327e928",
      "analyzer": "security",
      "rule": "xss_vulnerability",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 44,
      "column": null,
      "message": "Potential XSS vulnerability",
      "description": "XSS vulnerabilities can allow attackers to execute malicious scripts",
      "suggestion": "Sanitize user input and use safe DOM manipulation methods",
      "metadata": {}
    },
    {
      "id": "3198cc9fb87feb70",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 49,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "406b12171b355c15",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 49,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "0f80f646e4e29e55",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 49,
      "column": null,
      "message": "Dangerous function 'shell_exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "3d01330800d7313a",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 277,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "f67197bc2d1d337b",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 19,
      "column": null,
      "message": "Function 'new' has high cyclomatic complexity (157)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "4cf3da78674b1f7b",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 30,
      "column": null,
      "message": "Function 'analyze_performance_issues' has high cyclomatic complexity (31)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "5d1e5c0147bf149a",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 35,
      "column": null,
      "message": "Function 'for' has high cyclomatic complexity (29)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "0a485a210958b270",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 142,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (18)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "b5a5db9e87ff4ae2",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 145,
      "column": null,
      "message": "Function 'detect_nested_loops' has high cyclomatic complexity (18)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "0a0bc50174038484",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 166,
      "column": null,
      "message": "Function 'is_in_loop_context' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "83c89beec529a83b",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 216,
      "column": null,
      "message": "Function 'check_rust_performance' has high cyclomatic complexity (16)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "98b683f6af0e4c70",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 270,
      "column": null,
      "message": "Function 'check_javascript_performance' has high cyclomatic complexity (23)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "6a23b61464bda451",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 326,
      "column": null,
      "message": "Function 'check_python_performance' has high cyclomatic complexity (16)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "bc3551b209a63735",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 364,
      "column": null,
      "message": "Function 'check_java_performance' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "6c754544f1ff46c7",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 402,
      "column": null,
      "message": "Function 'check_file_size_issues' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "ab9af1f55d835dc1",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 22,
      "column": null,
      "message": "Dangerous function 'eval' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "d9254277a72213c9",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 23,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "58be1a3c6082f25f",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 24,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "89faad76893c0139",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 25,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "d1ed7d520e45b268",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 25,
      "column": null,
      "message": "Dangerous function 'shell_exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "99644c793e344cf7",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "Dangerous function 'passthru' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "a59c5582f63e8696",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 27,
      "column": null,
      "message": "Dangerous function 'popen' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "639c8f7338506b1e",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 28,
      "column": null,
      "message": "Dangerous function 'proc_open' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "f36df4c8ffaad50f",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 87,
      "column": null,
      "message": "Function 'analyze_line_security' has high cyclomatic complexity (19)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "162c57da22de1280",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 128,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "2df5b86a2e5b45bc",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 142,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "348149137924d865",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 142,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "42a7531991a4c188",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 143,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "f1274c2e3127d318",
      "analyzer": "security",
      "rule": "sql_injection",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 287,
      "column": null,
      "message": "Potential SQL injection vulnerability",
      "description": "SQL injection vulnerabilities can allow attackers to access or modify data",
      "suggestion": "Use parameterized queries or prepared statements",
      "metadata": {}
    },
    {
      "id": "c306e10224f4dae2",
      "analyzer": "security",
      "rule": "xss_vulnerability",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 305,
      "column": null,
      "message": "Potential XSS vulnerability",
      "description": "XSS vulnerabilities can allow attackers to execute malicious scripts",
      "suggestion": "Sanitize user input and use safe DOM manipulation methods",
      "metadata": {}
    },
    {
      "id": "5412426982fb977c",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 32,
      "column": null,
      "message": "Dangerous function 'eval' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "d0645b892f6d10b4",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 36,
      "column": null,
      "message": "Dangerous function 'eval' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "658f54f31fb524ff",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 40,
      "column": null,
      "message": "Dangerous function 'eval' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "9b1f8456dbec465d",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 10,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5791c432c839ff48",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 21,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "09b81101189e4387",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 45,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "84fb90d2441414bd",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 145,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "3dec89146cef6585",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 67,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (18)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "4ed2671ce540b345",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 69,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (17)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "b663cb8e0b01d429",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 109,
      "column": null,
      "message": "Function 'Some' has high cyclomatic complexity (16)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "5ee0e3a5accecc42",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 165,
      "column": null,
      "message": "Dangerous function 'system' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "f36bb510790dc219",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 74,
      "column": null,
      "message": "Function 'create_default_network' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "d9658569e6d9239d",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 253,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "ad576fed4ec6e6d7",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 263,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5b9a9212d4803987",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 273,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "f02b761353c4d842",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 6,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "9dd768fb550ac142",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 35,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "111bc2e3cc0f81ce",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 47,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "4a603270fde6f3c8",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 68,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "0951c16b5f2cff40",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 94,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "a753e3d33ad7ac40",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 101,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "fe584bee5c283845",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 120,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "f1b16136ea3a463d",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 121,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "d2ffe327f0f8098f",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 136,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "222be7eb89a1bcd7",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 163,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "e474c739efedd945",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 184,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "cba317d9b631e75b",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 216,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "6d3b4cddc7c4d62c",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 245,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "71140dfe599e546d",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 274,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "83b0959e989b926a",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 306,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "7f430253c96e0e1a",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 108,
      "column": null,
      "message": "Function 'analyze_files' has high cyclomatic complexity (24)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "f9006ca2492b3b05",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 215,
      "column": null,
      "message": "Function 'drop' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "357ef36866af064b",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 327,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "aca401e64dd41a5e",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 8,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "a6e176d043860aed",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 77,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "803b971ce96bc593",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 12,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "adf22496aa8d1f15",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 20,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5a9436ab3cf42c0e",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 45,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "5d58b9b28e0f6fa8",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 45,
      "column": null,
      "message": "Function 'execute_gh_command' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "66ef295ad5737214",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 72,
      "column": null,
      "message": "Function 'sleep' has high cyclomatic complexity (18)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a6e0cd0955df4571",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 74,
      "column": null,
      "message": "Function 'Err' has high cyclomatic complexity (17)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "46ea48a7b7592c2d",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 126,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "ae4daa569a4a577e",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 151,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "b04ffe2a212d8d03",
      "analyzer": "security",
      "rule": "dangerous_function",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 177,
      "column": null,
      "message": "Dangerous function 'exec' detected",
      "description": "Dangerous functions can lead to security vulnerabilities",
      "suggestion": "Avoid using dangerous functions or ensure proper input validation",
      "metadata": {}
    },
    {
      "id": "5035889675aa7404",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 18,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "9dc87d78f705d12c",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 211,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "bb7c06ab8a4650ad",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 220,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5a3e0ea0d65f7dc6",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 187,
      "column": null,
      "message": "Function 'rule_category_confidence' has high cyclomatic complexity (19)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "30834131d370a615",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 208,
      "column": null,
      "message": "Function 'calculate_context_richness' has high cyclomatic complexity (16)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "dc98856b522b37e6",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 8,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "064f7d129bbaed39",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 28,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "924a76c5a7099bb9",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 49,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "2f2b17ab21aa2c2c",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 67,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "6e42ef20e5fc0068",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 95,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "d0de775d40c7dc46",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 104,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "74847a4a5de30a66",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 113,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "d0162ce5a57d0402",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 129,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "00ee85e0d7258bda",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 139,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5d72e13e2ac83c8b",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 149,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "97ce4891c7d23385",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 168,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "b8fb5b3b4933dc2f",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 277,
      "column": null,
      "message": "Function 'generate_report' has high cyclomatic complexity (36)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "ca1e46da426cda29",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 368,
      "column": null,
      "message": "Function 'update_classification_metrics' has high cyclomatic complexity (15)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "1d551c2e039603e7",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 449,
      "column": null,
      "message": "Function 'check_performance_alerts' has high cyclomatic complexity (21)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a7a15d10f404ae58",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 497,
      "column": null,
      "message": "Function 'generate_recommendations' has high cyclomatic complexity (12)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "603b3f36783c2f05",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 20,
      "column": null,
      "message": "Function 'new' has high cyclomatic complexity (11)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "3414a7a36c37dcd5",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 34,
      "column": null,
      "message": "Function 'Some' has high cyclomatic complexity (26)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "f7d179ce7eb8773c",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 53,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (22)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "43d6e89f41c3bc7a",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 78,
      "column": null,
      "message": "Function 'record_feedback' has high cyclomatic complexity (14)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "36560740b023cdb7",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 80,
      "column": null,
      "message": "Function 'Ok' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "e9efed1a724c7733",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 6,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "008639ea48bf5929",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 13,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "9c5364afa891fa0a",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 22,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "3d18dca051ed476a",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 137,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "cc60995c402db00f",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 189,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "8075b097306504ab",
      "analyzer": "code_quality",
      "rule": "high_complexity",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 270,
      "column": null,
      "message": "Function 'heuristic_classification' has high cyclomatic complexity (13)",
      "description": "High complexity functions are harder to understand, test, and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a956f374864b8d12",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 284,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "b0d4730ab9f976b4",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 21,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "429976817d763b09",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 31,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "5cbb44682b4aca90",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 39,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "c193366051531843",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 54,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "e173dd592995f431",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "High",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 63,
      "column": null,
      "message": "BUG comment found",
      "description": "Line contains a bug comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "bug"
      }
    },
    {
      "id": "e4148661a0694eaf",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 27,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0c15511f0e5c9737",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 28,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b84db9a540b92083",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 42,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "66bf3cd58246a79d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 43,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0d69aadb53e3ff28",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 49,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "556d0bd11ef36f01",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 50,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "77089f76f6a7763c",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 91,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "7e2320e114e0b6ef",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 92,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ac1e1c8665e084f8",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 93,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "cb5249853864c720",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 94,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "5fde32253f24167d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 97,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b029c64c64769256",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 98,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fb95f3da33d64683",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 99,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2cf07fd156925871",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 100,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "623cb1387312d846",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 101,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "37f4ebd44b53f296",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 102,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c0214c670c92f7ad",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 103,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "087b5901eaaeb000",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 104,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "bf77b13a0bf96302",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 105,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "5cb6984aa34048dc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 106,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9845bc859b36cb33",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 107,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c5b68158c75ff45a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 108,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ae2c629b5fbcfa87",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 109,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1cbf6f7c48b3baae",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 112,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0bff16eb9cc14d1a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 117,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "463e692f837946dc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 118,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2b4f99827d85f61b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 129,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c6f385e0bc62e5bc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 130,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "179db8ade1696626",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 131,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "18b15ab7fab1fb0e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 132,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a4a2ce1a2c839625",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 133,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "418a79fb677e3c03",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 134,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "dbea5274b6002176",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 135,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "470e9a1a767e332d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 141,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ed0d9075692951f4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 144,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "7b28a5b1bfc8d23a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 145,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "16ab10ceb3998ff4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 150,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2eb08aa3ebdbfc9d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 151,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "720bff25329350ba",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 152,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "bbe7fbb65ca59b3e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 153,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ac19031d4f044854",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 154,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b70d3be61373aadc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 155,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "867090ecb6bee340",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 160,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f4d3752aeee92200",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 163,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0566f68bf79088e6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 168,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ee0dfa461cc721c9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 169,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1a6f7a07c38af4ba",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 174,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3e7e78d17d15d46e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 188,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e9d230e19fe22a4d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 189,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0485b082ace35967",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 192,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "467e7d377ce5dbf4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 207,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3bc947302aea3171",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 208,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "94794e377741911a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 209,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3ee0402e4ce42139",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 210,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "441e8f923d36ed9b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 213,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "28b36914b25d7ee4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 221,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f8b160ec47d3706c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 222,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a60dcf1e4de47747",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 223,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d5d72af04efc13a8",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 224,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1dcc1b27663f9174",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 226,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "623d202a526edccd",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 231,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0464d92900fa9238",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 232,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "636e6779034db64b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 240,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c9baa507e59f3552",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 245,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3b63912d25563d89",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 248,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "cead3418794df627",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 252,
      "column": null,
      "message": "Function 'create_test_finding' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "0e3983bdb802f450",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 252,
      "column": null,
      "message": "Function 'create_test_finding' is too long (53 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "6962683eb6326aff",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 252,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (7)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "c70bd8da3a1d0ad8",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 256,
      "column": null,
      "message": "Function 'Some' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "9ea14c5118fdd1e0",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 257,
      "column": null,
      "message": "Function 'Some' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "a4307e3997792a9b",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 261,
      "column": null,
      "message": "Function 'create_test_finding' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "2e4477e07ff5396f",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 261,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (8)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "56bed6480a44ba0f",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 266,
      "column": null,
      "message": "Function 'Some' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "74b465460047e2b1",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 270,
      "column": null,
      "message": "Function 'create_test_finding' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "d175726c8a66a2b6",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 270,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "6719d2e378540c83",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 281,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "677f2e4175908d9d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 285,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9677fb9c7f81868f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 286,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "239461ebb717fcaf",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 287,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9ddc463d45b3e583",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 288,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6b77bda732151c36",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 297,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6f9fbccd7c330e89",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 300,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "463971e2f1a84a99",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 301,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c3380f28ad55f62d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 302,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "10fff402f098afea",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 303,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "bc1bee754ac92f56",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 306,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "99ad9ddc52662bbe",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 307,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2d36caca6902d9d9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 308,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "cb1a189f323ec489",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 309,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "7bc8e23d89ab915b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 310,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "dff1487a8e816d01",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 311,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0fdf4dff152a044f",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 319,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c0c4c15e080b56a7",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 370,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (7)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "47fe724660bb8a90",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 377,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (7)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "6b7b5febd8d11104",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 384,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "9bce424ed754c66b",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 395,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (8)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "6c64afe127cfa63c",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 402,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (8)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "58f9504f8788dee1",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 407,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "b63fedb7e9a25dd4",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 412,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "d474bfd6240b0522",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 417,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "46e92789a8e8dbb0",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 425,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (9)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "46e92789a8e8dbb0",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 425,
      "column": null,
      "message": "Function 'create_test_finding' has too many parameters (9)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "a10c69fe04ef67ff",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 24,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f03b5c8644ceb00f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 25,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e0958b83d67ceebd",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 28,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1bcc6254940ec8a0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 33,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f2e3b0fce0fd6856",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 36,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "007a50b165afa3f5",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 44,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "7bbde841cb972ac8",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 45,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0ad199975c485ec4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 48,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "77f2f22a5222191d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 50,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f76bfdc684d9493a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 60,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e895a7a61006915b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 64,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1bc95fa916c040df",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 69,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b82d1196301f47a6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 72,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "60660f791ff09a2a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 76,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ff52abad885dabf9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 78,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e8615a2d788aa71e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 81,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e5a257dd6b6adfc3",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 84,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "11b59375c95f1fac",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 85,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "954ef99a77ea97ef",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 86,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d0d66ac4d8c3e435",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 87,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "70512aaa1891ee37",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 88,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6208bd764c86c4b6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 130,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "272cf80c3bc2d696",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 134,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ccc2816d78e6eda0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 157,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "51d3b00f36811299",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 159,
      "column": null,
      "message": "Function 'for' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "04c0d59ae7f2b6d3",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 166,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c76c4fdcbcd068e9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 168,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "87ed611778e5b746",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 169,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "62596588e4417e2d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 170,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "487cc22aa263d4b0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 171,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "cf5e740fd4a48285",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 182,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "40425ba109917dbc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 199,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b92200587dfc4f3e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 205,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "4fecf4745c64fec5",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 214,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "675554a6c1c84275",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 219,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "00b750be193175d5",
      "analyzer": "code_quality",
      "rule": "large_file",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 1,
      "column": null,
      "message": "Large file (726 lines)",
      "description": "Large files are harder to understand and maintain",
      "suggestion": "Consider breaking this file into smaller, more focused modules",
      "metadata": {}
    },
    {
      "id": "4377ae8af715cc17",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 10,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "265ecfcf0c2a5711",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "97d64044c7e40c29",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 27,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "08ec72e319e35668",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 28,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "ffffc0b0c98fa6f6",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 29,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "3030c54efd0d9880",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 30,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "39e2117df9b23914",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 57,
      "column": null,
      "message": "Function 'analyze_line' is too long (89 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a71098da8b3c8d2f",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 60,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "0bebe62f065e6109",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 76,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c70a85ad296cc7fb",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 92,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e0a379aa37cfd2b9",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 108,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "30f670a59c1316a6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 125,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "3f8df677f33b83ee",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 168,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "dba72ff8c93bb935",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 175,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "adf83db3e93de95b",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 195,
      "column": null,
      "message": "Function 'Ok' is too long (75 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "18b8ccc8f1378902",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 198,
      "column": null,
      "message": "Function 'analyze_function_complexity' is too long (75 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "88ecefcbb4fe9aac",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 204,
      "column": null,
      "message": "Function 'for' is too long (66 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "e07eb0a162f765d8",
      "analyzer": "performance",
      "rule": "potential_memory_leak",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 220,
      "column": null,
      "message": "Potential memory leak pattern detected",
      "description": "Event listeners and intervals without proper cleanup can cause memory leaks",
      "suggestion": "Ensure proper cleanup with removeEventListener, clearInterval, or similar cleanup methods",
      "metadata": {}
    },
    {
      "id": "9a0b77db5fa44e0c",
      "analyzer": "performance",
      "rule": "potential_memory_leak",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 249,
      "column": null,
      "message": "Potential memory leak pattern detected",
      "description": "Event listeners and intervals without proper cleanup can cause memory leaks",
      "suggestion": "Ensure proper cleanup with removeEventListener, clearInterval, or similar cleanup methods",
      "metadata": {}
    },
    {
      "id": "42949894bafe437b",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 280,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "960d5a58e4b8d0ad",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 286,
      "column": null,
      "message": "Function 'Ok' is too long (61 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "c666a46757c936a6",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 289,
      "column": null,
      "message": "Function 'check_import_organization' is too long (61 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "2328711452f2e890",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 292,
      "column": null,
      "message": "Function 'Some' is too long (55 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a46bccba133ed23a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 297,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "daeee5b59880cfc8",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 297,
      "column": null,
      "message": "Function 'for' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "8b05f0f2457747f1",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 300,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ad81aa41c842b0ff",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 301,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "827d89bbc6bb227f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 302,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "230cb087d7701c4d",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 303,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "77ff7ddf1396a656",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 304,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "4b23ea93a59239ba",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 305,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "03bdc0774ccd7740",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 306,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "053afca9342bae09",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 307,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "aa6f5a20d984df97",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 308,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "cde99067cad02b9b",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 309,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "070fc72b3724cdaa",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 310,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "0db8c9b716da1e9e",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 311,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "5b09a4fff5a98fba",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 312,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "175e29458c54deac",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 313,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "c9fb9ae12f73d99c",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 315,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "e7f264417fc3980b",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 322,
      "column": null,
      "message": "Function 'for' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "ccba3da4fa72e008",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 325,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "a0f1a26492a1dbbb",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 326,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "a2ab2108eb677d4a",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 327,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "5b0678558d403ac9",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 328,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "a2ca76e4ba7d3b85",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 329,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "36fba8514e585816",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 330,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "7f5ede82d316b086",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 331,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "4a535741c761ccbf",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 332,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "82e811a52543f514",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 333,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "7f08994cef95b0ad",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 334,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "7b06dfe2644dc02d",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 335,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "8c041ae4618a8ab4",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 336,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "3e7d8b334ddca5e0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 337,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "2a590daac10c3b9d",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 338,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "62a793b6d899bbb2",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 340,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "98f23fb5504db7cd",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 351,
      "column": null,
      "message": "Function 'is_acceptable_magic_number_context' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "253a9fdee807eeca",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 365,
      "column": null,
      "message": "Function 'is_commented_code' is too long (307 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "b10930b1c26ff77b",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 383,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c856c48ad8b24263",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 384,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "64b42a71cfed8862",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 394,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "bb7e5d58ff3dfe87",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 395,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "ded81663ab1dc2c8",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 396,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "409dafb13e31d6b3",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 397,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "8ef566f242954144",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 400,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "be9cb7eaee5600f8",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 401,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "bbf3b0f4168d7ff9",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 420,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "04f1eebcea640475",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 424,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "2cab15975189dc28",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 433,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "35738644de23f2d9",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 491,
      "column": null,
      "message": "Function 'check_rust_quality' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "9757c0e0b0de529d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 506,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4322d9bab6c3f752",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 510,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "69ba5ec0b95d3bc1",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 521,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "13fd5a799c9f0977",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 529,
      "column": null,
      "message": "Function 'check_javascript_quality' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "24234270333fc94b",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 548,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4816976ad96200c1",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 560,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f104a0610e79977c",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 567,
      "column": null,
      "message": "Function 'check_python_quality' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "a9adc271886a50de",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 586,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "220ed7b85f0d52ea",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 605,
      "column": null,
      "message": "Function 'check_naming_for_language' is too long (66 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "e58253b00996f9f2",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 609,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "e9c82b6dd68e644a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 610,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4bf9c70a63f2f7a5",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 629,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "64b7f967c3a9810d",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 632,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "901105bc73a378cd",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 633,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "6c5811252c959d47",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 634,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "d178443862be5cd7",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 635,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ad755868071f37b5",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 636,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "55add28fa657a7ef",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 637,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "1cb57fbf6aa6e5fd",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 638,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "f0895bed80992a90",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 639,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "3a2274862fe5961f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 640,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "c02972453a7f1b53",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 641,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "86cfba5a82e7a4d0",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 649,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "45951cddb4ab5a90",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 652,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "1a212c384fc53af7",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 653,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "705db8ee459b119f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 654,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "20a69a4bf19c19cc",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 655,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "df9b90711b04dfdf",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 656,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "337acc0a701194e4",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 657,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "27c1e7965cba00ed",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 658,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "56e4e1123b857e8f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 659,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "13eb9d4eb27f80ef",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 660,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "baaba93c4da6cf13",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 660,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ffefba6e8068d66f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 661,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "51ec6de06c01fc8d",
      "analyzer": "code_quality",
      "rule": "complex_condition",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 712,
      "column": null,
      "message": "Complex conditional expression",
      "description": "Complex conditions with multiple logical operators are hard to read and test",
      "suggestion": "Break complex conditions into smaller, named boolean variables",
      "metadata": {}
    },
    {
      "id": "4d523cee50f2f90a",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 721,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "27663352a776bbce",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 12,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "77caa5f48701f7c6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 19,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3a9f31542ac81d97",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 51,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "6cbefc4374c4599d",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 52,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "f3acab6480346f53",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 71,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "bf96d3fb95035af5",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 88,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e931daff1e47bc69",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 92,
      "column": null,
      "message": "Function 'Ok' is too long (72 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "86c6edb407a05ed5",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 95,
      "column": null,
      "message": "Function 'check_dependencies' is too long (72 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "28e333b0d4565e89",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 95,
      "column": null,
      "message": "Function 'check_dependencies' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "592468f6a4e66d84",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 103,
      "column": null,
      "message": "Function 'for' is too long (61 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "7b8f1824dfc321a2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 104,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4d16043fc2dec3f0",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 105,
      "column": null,
      "message": "Function 'Some' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "0b69a217cfe76798",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 135,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "1af71c1c9c2ca57d",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 136,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "e8e273ebfe1f12c4",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 137,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "5c3c5eb890fdf115",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 138,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "81b3cc368895a7e4",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 139,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "1f36462cff1cce71",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 140,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4024a32436b83763",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 140,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "409bf7501de129db",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 143,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "0fb730250f9c5a7a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 147,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "406586f3549a8656",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 151,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "23d83ca13845071b",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 152,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "54a5f7739a944747",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 153,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "08140193c0353a6c",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 154,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "4bb09b6495216df1",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 155,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "073c3f5496034f06",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 156,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "a1dbab2ccaa5baca",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 158,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "3bb7ea57bfaf126e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 159,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e51f4638792dcbcf",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 172,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f66f062baf907ad6",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 177,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "5653d91bbe046add",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 178,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "668250b691d5adb8",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 179,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "f6e41bab14f85c2c",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 180,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "7481e07befa90300",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 181,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "f1522ed5abe1e969",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 182,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "5819fbf51dbeaba8",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 189,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "843b2dc7830f1320",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 193,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "2fe6d3dbafa139e7",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 194,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "17c776ffa67a4aa6",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 195,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "e8e3c9dd49216dbf",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 196,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "6f13ce8d827238da",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 197,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "161e306f222ed493",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 198,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ebcd7693d6eb0f81",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 229,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a6027a2344c87cf0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 240,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "917a855bd3223f97",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 263,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1cced199db0e71f1",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 338,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "7e3b1d8656436e6d",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 359,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "1177eb7fa9705f5d",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/integrity.rs",
      "line": 29,
      "column": null,
      "message": "Function 'check_file_integrity' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "fa59135e1066a2a0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/integrity.rs",
      "line": 48,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e3ae492b4a94a69f",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/integrity.rs",
      "line": 75,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "edcae5f47b15c10d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/integrity.rs",
      "line": 80,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1620c984b33ce47f",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 21,
      "column": null,
      "message": "Function 'check_config_drift' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "aeb27e4663ceb660",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 25,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "24542193a27f779b",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 30,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c9d4512747a72cc2",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 69,
      "column": null,
      "message": "Function 'analyze_config_content' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "6acc9c96391fa297",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 73,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "7e0c0638261e2e85",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 98,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "922c7733908a5893",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 103,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "b0286041608f2aa5",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 104,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ede84620f4467df0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 105,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "b73b1219fa1910d4",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 106,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "03e6186da2acd1d0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 107,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "22ee776adab56fe5",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 108,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "90a360a6787f8a71",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 131,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "fff34fdb203a758f",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 134,
      "column": null,
      "message": "Function 'check_yaml_formatting' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "43c6350ebeb629b1",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 144,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "0b4779c9bc3bbcae",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 145,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "d6a7ef6b991b044f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 146,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "4fe12e4607762d32",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 147,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "6e5e14b136f35ae3",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 148,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "6228e01b45fcc49f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 149,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "df37e41bb696f40e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 151,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "0e40334635253728",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 10,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a7cc6d63cf7ed2b3",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 17,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "1bef135c0ed15722",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 18,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "7d740e562cdc0b40",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 19,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "987faa37deb4a1b6",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 19,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "fa2993b3ba7c73c9",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 23,
      "column": null,
      "message": "Function 'check_non_production_code' is too long (89 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "df08227081d6e157",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 27,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "42834ca17ee9d9de",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 27,
      "column": null,
      "message": "Function 'for' is too long (82 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "cdd123ad683b25da",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 30,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "518abf1b67d427a4",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 32,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "fa236527b2d49ccd",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 35,
      "column": null,
      "message": "FIXME comment found",
      "description": "Line contains a fixme comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "fixme"
      }
    },
    {
      "id": "b5cb95e086b7b80c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 55,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9015b9011de2bbf1",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 56,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "84ae75a3d080928e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 66,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ab2c9e0625b62253",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 70,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2815163cee49c0ad",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 72,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "048874ca436fa06a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 73,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "16f6cd8c2fb85fa3",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 93,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "d04a4527791dda80",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 130,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a42ca283848d84f2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 9,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c99a0cb98a1496ab",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 12,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "2ed0f53b3c80abea",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 20,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a98765a738738ed7",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 35,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "77233513d96e27e2",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 40,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "9a3e9eab52d04f6c",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 45,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "f399dfb75cac7754",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 50,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "964de4ef70cfe52e",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 55,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "426930cfa649b714",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 60,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "e1b328ce6cfb5575",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 74,
      "column": null,
      "message": "Function 'new' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "dfe94e5c38aa70e6",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 79,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "cf740f32a01f715f",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 84,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "e6f26cfc7d0d7334",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 89,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "0ae8e73f5a21f6cf",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 94,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "c368613672244ef3",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 99,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "107b454afdd79491",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 113,
      "column": null,
      "message": "Function 'new' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "c47536bc4059e207",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 118,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "860b7e062d71ef79",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 123,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "155534ed17f4bfa2",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 128,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "5a127961fd2fb739",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 133,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "47122c8e8996aa08",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 138,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "86492d48f0daca0b",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 156,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "2bc1e9a3fba4eae5",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 161,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "30cf90fe9c4efccb",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 166,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "b1119508d21fb22d",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 171,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "db34abef0ff0031b",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 209,
      "column": null,
      "message": "Function 'for' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "5a59e13c7c42dcf0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 219,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "09eb406076ed8c71",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 238,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "730e4fa71c941ce3",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 239,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a6ca382b1aab27fc",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 248,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1735eb7c39527678",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 259,
      "column": null,
      "message": "Function 'calculate_complexity_fast' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "fb1e8709c43abf99",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 265,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c2a8c123be8394dd",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 266,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "d80e284762c048ed",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 277,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "4f4367dc9a60dc2f",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 355,
      "column": null,
      "message": "Function 'test_optimized_patterns' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "aed638960e2d5abb",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 358,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "8aa0e21d66146e64",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 373,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "5ec5f93e92b0b48c",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 9,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1e143b93b1484ddb",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 19,
      "column": null,
      "message": "Function 'new' is too long (427 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "09c78254e9e82cf4",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 21,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "05494457e67c7ec5",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 21,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "7c25cc8553c9b099",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 22,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "f440927563190a4e",
      "analyzer": "performance",
      "rule": "regex_in_loop",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 23,
      "column": null,
      "message": "Regex compilation in loop detected",
      "description": "Compiling regex patterns repeatedly is expensive",
      "suggestion": "Compile regex patterns once outside the loop and reuse them",
      "metadata": {}
    },
    {
      "id": "91a3d750106922d0",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 23,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "ced30fac5424c7ab",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 24,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "8181f32d0905de60",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 25,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "ae6fbb401620905a",
      "analyzer": "performance",
      "rule": "regex_in_loop",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "Regex compilation in loop detected",
      "description": "Compiling regex patterns repeatedly is expensive",
      "suggestion": "Compile regex patterns once outside the loop and reuse them",
      "metadata": {}
    },
    {
      "id": "ce0e69c71e32fa66",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "b63cd5d7eef0fef5",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 30,
      "column": null,
      "message": "Function 'analyze_performance_issues' is too long (114 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "7f74af4798d8fb43",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 35,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "61bbcb7e27a4af9a",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 35,
      "column": null,
      "message": "Function 'for' is too long (103 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "e218a3af1a5c3679",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 38,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "185e80bac38958bf",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 54,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "2f9c2e092b627e31",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 70,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ebd56a692e73a0a9",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 86,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "754ef543cd545e71",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 103,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "68d9217a668625e6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 119,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "b2f92365e9bb6bb2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 148,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1cb92d3701402f36",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 152,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4d872bb827c82508",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 158,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "2e5c235b2dc8df4a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 171,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "3bd489f7ce8826ba",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 182,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "cf12b62429a360d1",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 216,
      "column": null,
      "message": "Function 'check_rust_performance' is too long (53 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "cb0d455d4ea23492",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 235,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "37d5b38921aed271",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 251,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4f282328f259ba01",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 267,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "9d472c147ca57db1",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 270,
      "column": null,
      "message": "Function 'check_javascript_performance' is too long (55 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "1bfeaab6e8f3259e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 291,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "581006873a505ccf",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 303,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "b63e879d534cf1f8",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 307,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "858b898bfc84232d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 319,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "c45045ec120d3420",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 323,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "fa7d8f165f070109",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 330,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f19a682aa4c196b8",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 341,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "9ecf7ec55a2121d7",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 345,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ee2d0b2f27351e87",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 356,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a23dfb744c2be2c0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 357,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "5444f2c75ae8b82a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 379,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ea6277cd43fa46a0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 383,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ca009c03e59a03db",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 419,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "65a9ea66a4c46c12",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 424,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "d48b54af89e26690",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 425,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4b86c5f916a62819",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 437,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "33c1bb6937ff04be",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 477,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "8926cb93c8d36fd0",
      "analyzer": "performance",
      "rule": "blocking_io",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 495,
      "column": null,
      "message": "Blocking I/O operation detected",
      "description": "Blocking I/O operations can freeze the application and reduce responsiveness",
      "suggestion": "Use async/await patterns or non-blocking I/O operations",
      "metadata": {}
    },
    {
      "id": "da48f07ee9849c24",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 11,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a5df1ba0b0f91958",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 37,
      "column": null,
      "message": "Function 'analyze_security_issues' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "e74e3bfd320f6676",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 49,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "248333c81ca666b0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 50,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "eee6a11cc91f15ec",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 60,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "89382782da49c4a3",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 87,
      "column": null,
      "message": "Function 'analyze_line_security' is too long (91 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "b0c690539833eefa",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 104,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "3bad82249b62297d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 118,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "af91c2f12cbf23e2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 132,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "2cdd8812f482a660",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 146,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "411ee7d2c55ce721",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 160,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "eaf15869c6642b95",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 161,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "967469c6344f24b8",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 179,
      "column": null,
      "message": "Function 'check_file_level_security_fast' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "d160a6da159e264e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 200,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "36ff7f45e67d3501",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 206,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "47439d1744746db1",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 207,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "a452214abc02f201",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 208,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "c784ed0b927900d5",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 209,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "d905a00548609d25",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 210,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "fc5dd5057905a2c6",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 211,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "4d73452b3ba9b7d1",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 231,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f8a46a2f50bacec0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 244,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f3da1214583819b0",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 254,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "b66f451adb45883a",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 260,
      "column": null,
      "message": "Function 'supports_file' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "18638947830f768b",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 269,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f1fd9446a67e3cf2",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 28,
      "column": null,
      "message": "Function 'check' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "50a94543777c4bef",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 36,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "adc5266702e4c0ae",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 45,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e3bfb06ffe8f2c46",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 50,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "e1bcc95c461f2dc7",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 73,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "897a65e5618de490",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 119,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "d5cf409b3657282b",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 138,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "b14a1f8e68a14191",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 142,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "b26a93c03b7584a0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 10,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "38a0bdeeec394b7f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 21,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f4fd68a1685c31fa",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 44,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a773314d2012fce6",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 45,
      "column": null,
      "message": "Function 'Ok' is too long (99 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "867129c70232905a",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 49,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "d35d11f72df17474",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 59,
      "column": null,
      "message": "Function 'is_cached' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "d67d666c014fd34d",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 121,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "2caa7e1f8dad57bf",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 145,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "116807c77558dc6d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 17,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ba98c67d787180ce",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 37,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "70690ac8bc15573f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 55,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9950a3e3083713ed",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 64,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "94509bc78b469aea",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 79,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0c05f2226336e64a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 97,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fe2e052e3662bbae",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 98,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "972cd5c9e139d6e0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 99,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fd626c0e2230d00f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 100,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0e58b22149c95b94",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 101,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "474bc1d3a8f46db9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 104,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9965a794e4df0e22",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 113,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "76a1403ab2df89bb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 118,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "cf309e0aa2e101a5",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 119,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "dfd8db437add38d9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/check.rs",
      "line": 120,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "7eb082ec3fa93b92",
      "analyzer": "code_quality",
      "rule": "large_file",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 1,
      "column": null,
      "message": "Large file (550 lines)",
      "description": "Large files are harder to understand and maintain",
      "suggestion": "Consider breaking this file into smaller, more focused modules",
      "metadata": {}
    },
    {
      "id": "a8294374e5f4ab23",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 24,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e58dfaf496da84b4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 25,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f5da0bb49a7adc30",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 26,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "46271c54d739a2c9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 27,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1de870b56bf39a93",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 28,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "4296c01a1293a148",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 45,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0e6b656b9b91ca13",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 48,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a2bf5c4a3e06be2b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 67,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1eba318dea8be70c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 98,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "97544d0667460126",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 139,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c191baff9bb24d30",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 245,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1f48ba3ae47d3c6d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 300,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f0aa280433c7e8ca",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 308,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a9a92adf4e32d216",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 344,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f1274a327105143e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 457,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e30cbcdb3861eb3c",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 505,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f8984dc9b56db121",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 11,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "aa38142543559988",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 12,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "61c37f8fd8bb59a7",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 29,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a379716f86d5457f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 30,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f3c86474bd9cc87d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 31,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a9864934068d47bb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 32,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "977b62b33ceaecec",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 33,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "02d0238535115c4a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 44,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "5d954dae50cb7692",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 45,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "27d47d3e54f001a9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 52,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "25159ff4080b42af",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 53,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1fb3cf57d7d23e67",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 67,
      "column": null,
      "message": "Function 'Ok' is too long (130 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "07fb4503ccb4a30d",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 69,
      "column": null,
      "message": "Function 'Ok' is too long (128 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "86b593f48f557183",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 80,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2a6f8e7c1ae8391b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 83,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9ee3be4b82b981b4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 84,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "56440dddfe90a454",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 85,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "04cc8ee2106294a6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 86,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0a2af6839f7890b5",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 87,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b2ccf45a2b5d6c58",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 88,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9dae1d0aae7d4a39",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 164,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "8c0434d20810c23f",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 184,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "2a5766b7d4628b03",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 192,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3a8ab748f787436a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 193,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9856cc44b91f46e2",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 9,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "faecde4bb3ce4297",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 10,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "c9f1157c1e4eda31",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 11,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "b01525fa97490fb3",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 18,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1a2ced6cd71fd8fa",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 19,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3b4663a8a8b90a19",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 27,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "48e026d4088e0f64",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 33,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "52ca83ef699f6920",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 41,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6a086e518aba16c4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 50,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0472c054ec8c16bc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 51,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0b5a1d9707b5e6f4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 55,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "26505167192dbb6f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 61,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "eaca98374e7916d2",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 69,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e1a7d4434e63bd7d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 76,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "100217da9ab34df8",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 83,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "bd4703e11b5303a1",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 86,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "7cb1245d630c2406",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 22,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "4b98ad0421aea7c2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 96,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "edeb7ff243345ee1",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 108,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "aafc467516d46afc",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 120,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "90cd6cf7c87bfbbd",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 208,
      "column": null,
      "message": "Function 'for' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "4f02836207a89c6d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 18,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "00b1aced63d6e98c",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 57,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4553a4f92ce6cd28",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 64,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3337a1934fe3586b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 100,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b5525aad880460a5",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 107,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "96798b3a54ed10e7",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 131,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "b0ed7600f3c5692c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 180,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0023266851be897a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 181,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "be2ed2fdf7b4cfbb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 182,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "118344ae435a5c8e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 183,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ccac109c8e5a516d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 184,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a8933ace55c7890d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 185,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1b24b491f5fc90ad",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 187,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "69a5fa5efa541b47",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 189,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f5dbda7fe58111ee",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 190,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "867fa3a77b43d8f6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 191,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a1121db64889d479",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 192,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "468d2c31e341ffa0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 193,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6c3fa9bd33bd23ec",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 194,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "0e7b076a52b7a1cb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 195,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3e7e95c5d12ad192",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 196,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3e5ccc6fe6350781",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 197,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "73f90cba50aed9a1",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 198,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9e79aa7993afd23a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 199,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "eb61903182455a23",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 200,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b6f0b71d68e4ef03",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 201,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "95d68b756a3923d6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 205,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "8b35e935e308282b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 212,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f57dd22a941d9b91",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 215,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "eea0d9c15dd19502",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 216,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "8463ff436b5024cd",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 217,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "bf0f4cc189ed9c44",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 218,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "217547e974f2fa95",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 219,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3c2faf60209549a9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 220,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6c4979eaf4a9fdc4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 221,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f68989c92fc0e16e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 222,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fe0f13206943fad0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 223,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d70bea0735b219eb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 224,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "106111363c04e36b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 225,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "285626100021482c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 226,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "069f13542d74a9c7",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 227,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "a9d2577355265c0a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 112,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a386fa6f878fcd0a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 253,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d60d15f61f5ce879",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 259,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4778ce75301eba38",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 263,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "8252ea799aa031df",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 273,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "65c4cdc673ca52e4",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 279,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "0478817ec599769a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 293,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e3c92df53786e593",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 303,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "284d9eeba9b07b0f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 6,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "5e0a0cd5d40be296",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 35,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "274a5ac9427314c7",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 47,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "e1626dcdef0dd322",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 56,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "712bdd8eb7b479e6",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 68,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "cf97259e4a1e20c9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 94,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2953cab4f9d73ff8",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 101,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "38b052abf9c4287c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 120,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d5fb62f4f0cc0ac0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 121,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b04d2d2ba1baf0cc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 136,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "46e109a4440bc3cc",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 140,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "b5c4891710bc0aab",
      "analyzer": "security",
      "rule": "unsafe_block",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 151,
      "column": null,
      "message": "Unsafe block detected",
      "description": null,
      "suggestion": null,
      "metadata": {}
    },
    {
      "id": "1c08ac89d3eb243b",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 163,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "117ec596a16e0040",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 184,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b7c79b8d2f0d8aa8",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 188,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "09abb5ab6d32d5cb",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 190,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "7df7e9eb4fd3b058",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 192,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "dbbab988174ddcd7",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 194,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e2f73964fca8999a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 198,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "0b6be1708a4fc155",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 216,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "caeee6a4665cc35e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 220,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "d0e5db5ee250a430",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 222,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "0ecef5aecf225af4",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 224,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f41ca24a292fbe52",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 245,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "779ec0681116f288",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 249,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "20e85bbeecf452e3",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 251,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "79ca122381385cef",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 253,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ebd6e6d4437fa075",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 255,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "522fb4ea428e7314",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 257,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "58f576e69c374d62",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 274,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ba12c28c50d24dff",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 278,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e70a399aa150d078",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 280,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ac771649f73b06a5",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 282,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "58c20521b098dad4",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 284,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "3b18bce1b3452b51",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 306,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f865399d06dc9293",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 330,
      "column": null,
      "message": "Function 'Ok' is too long (56 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "b9f9e2f7e3fc5b4e",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 388,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "fd719e8a798923b8",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 388,
      "column": null,
      "message": "Function 'Ok' is too long (56 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "ca210db1a4cff961",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 392,
      "column": null,
      "message": "Function 'minimal' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "d5a5bd9ec84f2d10",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 392,
      "column": null,
      "message": "Function 'minimal' is too long (53 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "7ba36dabdfae3f95",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 59,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "98136d7fe147eabc",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 108,
      "column": null,
      "message": "Function 'analyze_files' is too long (122 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "84e5f622ff2a16d2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 120,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "84c8cac73b84276c",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 121,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "7f8df3b94ed92dae",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 131,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e79a4d164236fe2f",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 152,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "d0195487af15e39e",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 153,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "b8cc6f1c50368744",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 154,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "10265e7a37318ab2",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 155,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ce989413f2feed5e",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 157,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "86c2df1ca0036dea",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 158,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "96b2b325fcebac5b",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 158,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "d26e8b410551115c",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 159,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "c1500b42992ff62c",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 160,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "371730ce59438d58",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 161,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "726db14cc41265b7",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 162,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "552ac425734fc122",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 163,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "04ffd9f11fc59867",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 164,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "13c5dbb6ef41f2b5",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 165,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "b12ab04fec959e61",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 166,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "48e8272659015de0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 167,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "5fb7440c5f8c57c0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 168,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "dfa534d21c56b231",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 169,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "1b881b735528ad42",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 170,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "9c26ac2ad5738a5a",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 171,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "cbf92c2a51d98370",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 172,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "24fa44755605925a",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 173,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "e4c646e84744ae32",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 174,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ae2c9ff0980b4392",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 175,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "077453fb72b51821",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 175,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "34c2e54942f682f4",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 176,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "4074a6e519315635",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 177,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "fafa95c813c15645",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 178,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "6aa1439919b4b705",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 179,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "dec6efd736102008",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 180,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "8ae57326b8ac2d89",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 181,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "383ddf6bc75d962d",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 182,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "abfa4857851b0176",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 183,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "361794114d41629b",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 215,
      "column": null,
      "message": "Function 'drop' is too long (72 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "0170c3301ccca68a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 216,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ee5339259d5d6957",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 246,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f67149bac41cb1a6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 271,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "afc666187ed89ecb",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 283,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "067f845e2c2e5b57",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 301,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "32b4ed8b3c2f9bc1",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 327,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "18db77c48bb60e90",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 7,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "be7d4a617599b27f",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 8,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b4abe55ed96aa506",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 77,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6d88e9a46ffdbab6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 179,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "887c46066a48db4d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 188,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "e966bbe97f71c38e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 197,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "9a620923dfa25b32",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github.rs",
      "line": 5,
      "column": null,
      "message": "Function 'create_or_update_issue' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "f4376f125f3d0a93",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 12,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "dbcb4d28f0c8c5cc",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 20,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "54ec51be8464e4da",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 57,
      "column": null,
      "message": "Function 'Err' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "8dd67303ce85d5c3",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 67,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "77871c5adc23d211",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 71,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "1563dc1a9745b72d",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 72,
      "column": null,
      "message": "Function 'sleep' is too long (109 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "526914230c104d59",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 74,
      "column": null,
      "message": "Function 'Err' is too long (107 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "18986c24678d3cbf",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 136,
      "column": null,
      "message": "Function 'create_issue' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "7d5fe4b130095b46",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 163,
      "column": null,
      "message": "Function 'update_issue' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "91f5d6d09d617baa",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 192,
      "column": null,
      "message": "Function 'wait_if_needed' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "fd168bbfc07a74bf",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 204,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "4d29cea3eb3ecf7e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 18,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fb83444f3ee2dc3c",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 95,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "800fa8c7bcb86ae3",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 113,
      "column": null,
      "message": "Function 'Ok' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "f74fdfde0471e706",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 117,
      "column": null,
      "message": "Function 'train_batch' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "05d0fea9bcba4826",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 126,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "cd0bf27f732330d8",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 131,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a59d58eeba3fb46d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 134,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "159567d1ea2daa3d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 152,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fb5fe49080ca234e",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 159,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b7dfac5fe2f6f6ce",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 167,
      "column": null,
      "message": "Function 'adjust_learning_rate' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "0fb440bcf5b477de",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 211,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "118ba145a6d32fce",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 220,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "dfa20827d1dab131",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 243,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a9863f2f696079d7",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 244,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4a4d702346650522",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 248,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4e21c9993d7e12fd",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 11,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "779b217d7f4c4101",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 48,
      "column": null,
      "message": "Function 'extract_features' has moderate complexity (8)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "08e64c4a9798f540",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 125,
      "column": null,
      "message": "Function 'rule_specificity_score' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "6c4c54b46a3319dd",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 174,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "36fd4b9a2b8b297f",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 199,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "514ce1ed84c2622d",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 201,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "3e640eb384be4a61",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 212,
      "column": null,
      "message": "Function 'Some' has moderate complexity (9)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "35ef34f9e6b3aef4",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 214,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "beab8bb28ae17319",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 218,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "627894c41f177be2",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 224,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "d2dccd8ac5753e68",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 227,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "fffe59d767d01118",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 258,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "79f44c92e04ee19c",
      "analyzer": "code_quality",
      "rule": "large_file",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 1,
      "column": null,
      "message": "Large file (597 lines)",
      "description": "Large files are harder to understand and maintain",
      "suggestion": "Consider breaking this file into smaller, more focused modules",
      "metadata": {}
    },
    {
      "id": "da234938fe044db9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 8,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "2063f600a35e799d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 28,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "fb4b68cccc09f2b0",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 49,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "b9bfe23757241a6a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 67,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "630b65168138cf1c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 95,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "6ab121c2deac034c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 104,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "585acc0efa98f276",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 113,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "aed53222c312666d",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 129,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "12eaba0de62ac8b4",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 139,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "9aa6b9a1141ac7b3",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 149,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "ca6a018a96e8b579",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 163,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "7f8b755a81f72af9",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 168,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "753bfa669c221f03",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 199,
      "column": null,
      "message": "Function 'record_inference' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "7863d146e5631233",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 235,
      "column": null,
      "message": "Function 'record_training' has too many parameters (10)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "dadf8a3541163f28",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 277,
      "column": null,
      "message": "Function 'generate_report' is too long (61 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "f429d055cf0a404f",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 356,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "c3a941926a130724",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 452,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "342c99467b1fddb0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 453,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ed7d96463a7e61a0",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 454,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "3362dc407d1d163a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 458,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "294bc26c397d13f3",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 464,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "adaf688810c8ee2a",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 470,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a212d1a69b12891b",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 477,
      "column": null,
      "message": "Function 'add_alert' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "bd011dba964d8ce3",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 516,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "bc8d9dc2917e5dc6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 547,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "6df6fc0a49089cdd",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 563,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "9601255834a8e5c1",
      "analyzer": "code_quality",
      "rule": "long_function",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 34,
      "column": null,
      "message": "Function 'Some' is too long (64 lines)",
      "description": "Long functions are harder to understand and maintain",
      "suggestion": "Break this function into smaller, more focused functions",
      "metadata": {}
    },
    {
      "id": "a68e5ebf8206e3e7",
      "analyzer": "code_quality",
      "rule": "moderate_complexity",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 51,
      "column": null,
      "message": "Function 'predict_relevance' has moderate complexity (10)",
      "description": "Consider simplifying this function",
      "suggestion": "Look for opportunities to extract helper functions",
      "metadata": {}
    },
    {
      "id": "1badf352a440bbb3",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 147,
      "column": null,
      "message": "Function 'record_training_completion' has too many parameters (10)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "c95c647a749e2ea2",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 6,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3b6b1e4a7f3ccf56",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 13,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "5bffd535068feceb",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 22,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "f0bcf956633a752d",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 60,
      "column": null,
      "message": "Function 'add_feedback' has too many parameters (6)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "1239e81c3c43ecde",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 94,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "9730f7393878b8c7",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 137,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "3b381bd65f170426",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 189,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "8ee256573622ea8e",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 206,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "dd81499fe2eefd50",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 238,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "a16bc19661bb2cf6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 254,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "4dfdd3f683d2e79c",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 284,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "687807ab4079baf5",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 324,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "1fa8b110c8295eb6",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 16,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "f5639d8d2dc9e83f",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 51,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "65d9bb65e12d7c26",
      "analyzer": "performance",
      "rule": "nested_loops",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 112,
      "column": null,
      "message": "Nested loops detected - potential O(n²) complexity",
      "description": "Nested loops can lead to quadratic time complexity and poor performance with large datasets",
      "suggestion": "Consider using more efficient algorithms, hash maps, or breaking early when possible",
      "metadata": {}
    },
    {
      "id": "ee93e15a78f24e00",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 163,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "ea1071d819fc035a",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 164,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "9e850b05d09d833c",
      "analyzer": "code_quality",
      "rule": "deep_nesting",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 165,
      "column": null,
      "message": "Deep nesting detected",
      "description": "Deep nesting makes code harder to understand and test",
      "suggestion": "Consider extracting nested logic into separate functions",
      "metadata": {}
    },
    {
      "id": "879fecde1919694d",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 186,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "ee9e6ccfc9b7f8b9",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 190,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "567c0dfbbc012b42",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 209,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "262a0046bc744ee1",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 21,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d2929f7983565b1a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 31,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "187b02d2fec9e94a",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 39,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "d0db4133837c2088",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 54,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "859af34a70739493",
      "analyzer": "non_production",
      "rule": "debug_statement",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 63,
      "column": null,
      "message": "Debug statement found",
      "description": "Debug statements should not be present in production code",
      "suggestion": "Remove debug statements or replace with proper logging",
      "metadata": {}
    },
    {
      "id": "64ba5a521a3d3bbb",
      "analyzer": "code_quality",
      "rule": "too_many_parameters",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 121,
      "column": null,
      "message": "Function 'new' has too many parameters (7)",
      "description": "Functions with many parameters are hard to use and test",
      "suggestion": "Consider using a struct/object to group related parameters",
      "metadata": {}
    },
    {
      "id": "0c372b0d9e167b48",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/utils/progress.rs",
      "line": 26,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "c1159fb684afb3bd",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 8,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "a94d297a46035291",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 9,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "86876e2b5969ac89",
      "analyzer": "code_quality",
      "rule": "unwrap_usage",
      "severity": "Medium",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 10,
      "column": null,
      "message": "unwrap() usage detected",
      "description": "unwrap() can panic; consider using proper error handling",
      "suggestion": "Use expect(), match, or the ? operator for better error handling",
      "metadata": {}
    },
    {
      "id": "f7faeada97d29005",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/benches/hashing_benchmark.rs",
      "line": 16,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "8830745b332a3297",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 6,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "019c633ba160701c",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 22,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "2185e2e5944f3237",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 23,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "bfef71e07962cef6",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 49,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f556a08c258eff35",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 52,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "a7cf53bfb5d768af",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 62,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9c07b5ff845344ba",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 74,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f12590239277b099",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 86,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "afd49ee21bd95fe3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 87,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "a20591b2aaef51cc",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 97,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "82595a4176e768ec",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 107,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "cc552ccec8c56ac0",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 108,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "862c1681934b2b52",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 109,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "fa196e58085c6ff3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 122,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3301084739932608",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 123,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6fcf0f9c2a5d6f51",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 125,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "436f48bd8802d9d6",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 126,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "636c1749bc7dc7c7",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 130,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f104492532bbd3c2",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 131,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "baa6570650131d33",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 132,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "27992886b04974c6",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 140,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ae9b265bda776df1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 145,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4fa5108b57834a2e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 159,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "bee30aa7ec545ffa",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 171,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "06603ba6b2fff140",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 176,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7db4fa8344a82c0f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 177,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "fc931b4b4c64a129",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 185,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4e1ed294cd65b219",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 194,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "84670387465a5141",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 195,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3aabba855874c7e1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 197,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3fe3effbbf85c154",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 203,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f49f06731c47c4a9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 214,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "021c662b95020759",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 216,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "368f3c7bd42e33c1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 218,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c1ee98f0a1a654a5",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 224,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "a4f8549bbc5358cd",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 235,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "779c2a74af70c95b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 254,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f5a3125c50904ab3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 264,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4bf85f73708517da",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 272,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9382157085a4948a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 301,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0e8bb746fe313c01",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 302,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2a9c5009833ee6eb",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 307,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "8c49d4f6d37a0152",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 326,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d0e74a02330c8ba3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 327,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "dc286571e7ec5963",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 328,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c3d4d780a883f812",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 329,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "a3368ba8f5fc5a27",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 330,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "33c10177d4b0002f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 333,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "416d15d16bb00c00",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 334,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ae9acb18b1be368a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 335,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "df26a662581a4fb0",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 336,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "77179450812df7df",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 337,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d494df25240eae5d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 342,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6b0d00b53f2cf143",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 343,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ec9c0ab327a5fbb8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 344,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "277d10c169b225a6",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 345,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "5e46bf79822af85e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 346,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "57039b6c4ec2a93c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 349,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9a45faa7d13531e4",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 350,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1ccb6cb4246e852b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 351,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "649f7f40d5454152",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 352,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0b203511709a611a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 353,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "46fccaff0dfb9cac",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 372,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "b28925fe44ce680e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 379,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "94727da209ac5f6a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 386,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "deb34e7534b9a235",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 398,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "969e2f80196b0bb6",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 9,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "4ba8162532c3a270",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 11,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "c60308c4d1b9e4ac",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 19,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "5338053fc7729e57",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 20,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "1b070b1d47b0be8f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 53,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7f21f918abbf7aef",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 67,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3b2d56a97002fd32",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 101,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "52164d5b7f1d1869",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 112,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "35562592b856a5ad",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 121,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "87e3dcdbfa7d0192",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 124,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "53b93fc4c6cfcef1",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 125,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "c5824a7b1cf57d9b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 133,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "a4765d2ac7c3cf7f",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 152,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "aed4adea027b3601",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 167,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2eca9548b0c56f28",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 178,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "a1aa98b06614f62f",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 187,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "e70336ac95990ba3",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 191,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "c5900a738de342e9",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 193,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "a0612219fef5c598",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 204,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "7c79087048945b27",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 205,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "ac34fccb403063fb",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/examples/ml-training-example.rs",
      "line": 208,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "e36b61faf714505f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "50b45d0b3601e92e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 27,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "489bfdfe801a6b06",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 39,
      "column": null,
      "message": "Duplicate line found 11 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "b3cf46582f16a4dd",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 44,
      "column": null,
      "message": "Duplicate line found 5 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "ef7020f9e9a1412f",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 67,
      "column": null,
      "message": "Duplicate line found 22 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "f15169f358346173",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 93,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1e05a71a70809395",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 110,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7952c7627f3c0d82",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 151,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1eddaeb1a4164e36",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 169,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "e6b67827a9cb28aa",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 170,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "40550a29700f84f7",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 209,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "81f5dec02dcc05f5",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 238,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d03267aa93fa33b4",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 281,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "3296253ad52935f3",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 548,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "009fb7bb1d1b8928",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 697,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "2728ed773a0e2390",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 698,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "e6dad8c8de83d778",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 702,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "c478a4bd0bf2b3e7",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 703,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "939731486c66d961",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 57,
      "column": null,
      "message": "Duplicate line found 6 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "fb2bcd9d8ab787e1",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 109,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "c2889340f8e067b0",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 116,
      "column": null,
      "message": "Duplicate line found 9 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "b11a313b36467f4c",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 320,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "bb22875b61c34027",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 321,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "52effd574ae8876d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 329,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3c1b821fc38ebab6",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 330,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d2cc5dbff9bb445e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 351,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "57bf868ee5483e99",
      "analyzer": "code_quality",
      "rule": "single_letter_var",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/integrity.rs",
      "line": 76,
      "column": null,
      "message": "Single-letter variable name",
      "description": "Single-letter variables reduce code readability",
      "suggestion": "Use descriptive variable names",
      "metadata": {}
    },
    {
      "id": "498f3cc36d0ec683",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 22,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "0e1cd383c3af67b1",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 72,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "39abb08c07189ad5",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 74,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "ee879b1a66b85716",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 78,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "99a3c02dfa63d213",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 80,
      "column": null,
      "message": "Duplicate line found 5 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "f6abfafbfe8cd491",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 82,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "5842bf2f114ac1be",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/lint_drift.rs",
      "line": 85,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "9167bf31e007e709",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/mod.rs",
      "line": 11,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "58c5bfd477803e23",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/mod.rs",
      "line": 12,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "cf9557dba8e84859",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/mod.rs",
      "line": 13,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "b08b55841e669525",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 9,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "9bb3ed657476c815",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 17,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "dfa3a51067293731",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 30,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "c777bc9f82c122cb",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 31,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "4d8316a65714d238",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 36,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "667ef2dc1dd1bf65",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 43,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "cf0529b2217aca48",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 45,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "3f90ea1dde2a02be",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 34,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "cc6a5d1f543548e9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 59,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "8e6dd76f06621f1c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 115,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "b8f9a61457901d51",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 220,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ec78e6d9f8778591",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 235,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "bbbe28c194b868b4",
      "analyzer": "code_quality",
      "rule": "single_letter_var",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 250,
      "column": null,
      "message": "Single-letter variable name",
      "description": "Single-letter variables reduce code readability",
      "suggestion": "Use descriptive variable names",
      "metadata": {}
    },
    {
      "id": "4401c30dcdbf1818",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 352,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "6b196e471cb36312",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 359,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1d219291eb6f8d4f",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 31,
      "column": null,
      "message": "Duplicate line found 7 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "7b2f5fa1ab7693b6",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 45,
      "column": null,
      "message": "Duplicate line found 18 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "0f774606b5852816",
      "analyzer": "performance",
      "rule": "inefficient_collection_ops",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 148,
      "column": null,
      "message": "Potentially inefficient collection operation",
      "description": "Linear search operations in loops can lead to O(n²) complexity",
      "suggestion": "Consider using HashSet, HashMap, or other O(1) lookup data structures",
      "metadata": {}
    },
    {
      "id": "b387045fe14094a7",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 150,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "da0a48e5f35ddbf3",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 153,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "6911941efc56ee7f",
      "analyzer": "performance",
      "rule": "inefficient_collection_ops",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 158,
      "column": null,
      "message": "Potentially inefficient collection operation",
      "description": "Linear search operations in loops can lead to O(n²) complexity",
      "suggestion": "Consider using HashSet, HashMap, or other O(1) lookup data structures",
      "metadata": {}
    },
    {
      "id": "8ee1113948483ea4",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 167,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "99a94b024f642e26",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 168,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ec508a1509671fde",
      "analyzer": "performance",
      "rule": "inefficient_collection_ops",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 171,
      "column": null,
      "message": "Potentially inefficient collection operation",
      "description": "Linear search operations in loops can lead to O(n²) complexity",
      "suggestion": "Consider using HashSet, HashMap, or other O(1) lookup data structures",
      "metadata": {}
    },
    {
      "id": "014d00d469b07f0c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 181,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "cc68e61664faeee8",
      "analyzer": "performance",
      "rule": "inefficient_vec_growth",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 236,
      "column": null,
      "message": "Vector without capacity hint",
      "description": "Growing vectors without capacity hints can cause multiple reallocations",
      "suggestion": "Use Vec::with_capacity() if you know the approximate size",
      "metadata": {}
    },
    {
      "id": "60a908e723f4804b",
      "analyzer": "performance",
      "rule": "string_building",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 252,
      "column": null,
      "message": "Inefficient string building pattern",
      "description": "Building strings character by character can be inefficient",
      "suggestion": "Consider using format! macro or collecting into String",
      "metadata": {}
    },
    {
      "id": "f5f1218dcf1499be",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 307,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "f4c9bba70e2fe3c5",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 409,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3b0c50cf89382baf",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 426,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "394f730a8306d589",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 471,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "b3c7c9f93ee515c1",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 472,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "12a7a41f74d69ecc",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 476,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "3c5976a8f91028e0",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 486,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "0ffb8f637f591b7e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 31,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f98c1b7ad914c960",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 38,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "3a08d3d69fdd5652",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 92,
      "column": null,
      "message": "Duplicate line found 6 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "01f83ed982c64295",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 96,
      "column": null,
      "message": "Duplicate line found 8 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "e3d966d1f70c2f49",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 157,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "5e2af732f1ecc458",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 200,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "007292829c3c8ff5",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 227,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4e448c59a618d696",
      "analyzer": "code_quality",
      "rule": "single_letter_var",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 239,
      "column": null,
      "message": "Single-letter variable name",
      "description": "Single-letter variables reduce code readability",
      "suggestion": "Use descriptive variable names",
      "metadata": {}
    },
    {
      "id": "a86bca6adeaf749e",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 281,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "a4710c56e51cf9b1",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 282,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "e99ac92bde791122",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 286,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "0e82503155226ad3",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 289,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "232f698310bf5e70",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 28,
      "column": null,
      "message": "Duplicate line found 5 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "d4c6510352f6b74b",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 29,
      "column": null,
      "message": "Duplicate line found 5 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "e9e100d151400db8",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_checks.rs",
      "line": 38,
      "column": null,
      "message": "Duplicate line found 6 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "b408e379eda994df",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 81,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "e91bc6f5f37dbfb3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 122,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1bf91e876b02817d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 141,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "271b55e2b80c92ea",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cache.rs",
      "line": 157,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f02be054fbf95c23",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 39,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "a79d40f901826475",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 52,
      "column": null,
      "message": "Duplicate line found 5 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "61a59f4ec1148f5d",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 67,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "4ebf466d6b750277",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 71,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "f01927a3e6eeb57a",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 184,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "f355da7f7fe78236",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 223,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "5d241f1b25754c4e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 224,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "880a11bfdaee751e",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 258,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "45e2f1376d198a2e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 351,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "b527d7c1951e58ed",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 452,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "92955d6316fd6773",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 55,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "eee0347fbf0e362b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 99,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "8908b3e2fcbe8b76",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 101,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ad09dc879b90379f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 103,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "be8a0b0124d1b515",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 105,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "cbcb422f1ee366c5",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 114,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "d4b42e3ba016a54a",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 119,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "0665430937189edb",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 184,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "5286447b68a607e9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 185,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "a4ee651a54de5452",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/init.rs",
      "line": 190,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c7a077abc52f672c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/metrics.rs",
      "line": 70,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "de68de2bc353a17d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 174,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6be3e6c38cac9f02",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 126,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "f0a6fbcc25ae3a84",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 160,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "44fbc0cd6b314abf",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 161,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7551e3ac9aebe828",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 163,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "29bd55dbb9d73969",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 199,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6cd45728cb16ee59",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 204,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "94176a05369912ac",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 219,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "fb2da9a82749a1e7",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 24,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "6ccb3517d663f990",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 28,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "70018846915b14c5",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 57,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "f6e6cf3182c8aa61",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 61,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "d432534004a1f9df",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 65,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "5d7c8e203d308aab",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 77,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "9e4a2f0fd69656e0",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 81,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "3602c698d2cd6cf5",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 85,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "9959bfa7c742df42",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 100,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "35c2d96c2927c43b",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 101,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "4c738f2bc716bf1d",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 120,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "c748c4293b9343a9",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 128,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "75175464ef32225a",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 135,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "66fb95cb359e0555",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 139,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "ce32d31e3c3e0780",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 143,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "9eeb12ed6b970146",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 147,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "4daf21b35883e1a6",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 151,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "ce211d94f047264b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 163,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ef6dec62b63c4f12",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 163,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "0fd85c21b6778faa",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 167,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "757a348e4c8616f4",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 167,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "3e2b93b97f846293",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 189,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "dc9bd6f6ba283068",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 193,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "ab06ded4771b319b",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 197,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "0959c01eac52dceb",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 201,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "08336226d9236479",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 201,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "9b0eeabfd4ea20eb",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 209,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "d3ab92dadcb14f33",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 228,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "3ee9983c73a399c9",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 246,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "a421c587f11ec448",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/cli.rs",
      "line": 284,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "0190134a0cfa0ad8",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 17,
      "column": null,
      "message": "Duplicate line found 12 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "4db81f0b1c1fd27f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 19,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c449b018dd0b0a99",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 20,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d0a6f573fd9b49dd",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 22,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0d4ff920399bfa32",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 62,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "daa4b574f9a26dfd",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 115,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "22bd36cf862bf4c5",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 155,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "01a2cb6016e5678c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 156,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c720c92e2d35317e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 178,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f9d0a47f983e21db",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 179,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "e8ea2566ee1678fc",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 210,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "838d45fba579d8f4",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 239,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "43a6eb2ee488fc2e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 240,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c7f434be231f6504",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 301,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "e48b9c3b72952861",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 365,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "5ee309d67ee96ce9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 395,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "59d5bee3c68bcd0a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 396,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "54ee190eb8a2bcb3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 398,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "e5e76fcf8db6b89d",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 423,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "da3359c9a837f73d",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 431,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "258903fb28a0f1c0",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 432,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "1633c4664d2db712",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 433,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "ecf09f8393881e3b",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 434,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "5fb836ffe6a05f00",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 435,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "819527b9b436aeb4",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 440,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "8223aee76c120ab8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/config.rs",
      "line": 441,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3e38099fedfeec03",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 100,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f6a916910cab3a04",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 111,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "e0e6c677560722bf",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 133,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0f9872bbb07b4e7f",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 162,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "7c5bcc3bb9436ea8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 202,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "56e5ab037c4aab18",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 262,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "1ea51264d8528c63",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 284,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9cb8a5c565cec9ff",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 303,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "a3d38cc9f39f1efd",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 305,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "76ea08f687cb36ec",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/core.rs",
      "line": 317,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "b036de9ac4d590dc",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 22,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "1458deb2614e2da4",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 100,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "36906f0d84743368",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 146,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "b339a837e4d9ce19",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 147,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4a42813ca1f5df50",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 148,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d5617cc74267d7ef",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 149,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "03d524ebbd53dff2",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 150,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "b29bc174dc7c5e6f",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 181,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "40b25da3012cafbc",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/error.rs",
      "line": 183,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "af3923702c7d090d",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github.rs",
      "line": 16,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "3a9ffe06754666bc",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github.rs",
      "line": 21,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "59620da2673bb1a2",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github.rs",
      "line": 22,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ae4060f95a05f109",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 36,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "5ffa0327160bfb5d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 40,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "10ac26ec1cca8c0b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 97,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2a8c5287dcbea74d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 105,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "23a8a4f17197f336",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 106,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3b5fa59eab369728",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 107,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "672229cb6e627929",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 196,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7dc6c694128ba7f1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 203,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "fb57940702065c35",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 214,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "05a7f8701f397f37",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 231,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "3459102a06cc1d53",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 233,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "47d9a0d8a1877323",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 245,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "40410c1edf23adf2",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 256,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "26784bcb36a07843",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/github_api.rs",
      "line": 271,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4acb7957776650a4",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/main.rs",
      "line": 18,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "0d64342c9f4e6c20",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/main.rs",
      "line": 21,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "8d41013157987662",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/main.rs",
      "line": 22,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "abd7f8356f30344c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 51,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d51ed2bf8a8b6b3f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 61,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9b7e6805cc76c0a8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 62,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f8eed78b7c3074c2",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 72,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0871f2f212b89462",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 158,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "13970d1147e02826",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 174,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "42a1eea8382ac3cd",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 195,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "d75bda4ba885232c",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 247,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ddb8ca1f647a67ea",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 248,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "60e055a1e137a01b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/fann_classifier.rs",
      "line": 250,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4ae7c9184c55ee69",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 37,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ead21ac08836c9af",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 38,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f9b6ce428342cd29",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 39,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "facba33443be82d9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 47,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "612bbf9e20f9f9a8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 49,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9327a477d1ca4cc1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 78,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3aeeb96e28dd21a8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 81,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "478b52c6775bb0d9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 84,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6f09298f469bc879",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 115,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0eaa6467c4333f34",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 120,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "14e87198d0dbb7f1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 121,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "f23c6fb70092f158",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 127,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "a1ab5e6b1b815187",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 140,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d8b991570983f50d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 148,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7d340003b4e9da0e",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 149,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "23770f112fe4c26a",
      "analyzer": "code_quality",
      "rule": "single_letter_var",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 169,
      "column": null,
      "message": "Single-letter variable name",
      "description": "Single-letter variables reduce code readability",
      "suggestion": "Use descriptive variable names",
      "metadata": {}
    },
    {
      "id": "7ec104b36bb8791b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 181,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "98c9e1ce75cafcda",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 181,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "5bbb6961fbcd3a0b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 182,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3f06dec21c4c872d",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 215,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c465911a227b2513",
      "analyzer": "performance",
      "rule": "inefficient_collection_ops",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 219,
      "column": null,
      "message": "Potentially inefficient collection operation",
      "description": "Linear search operations in loops can lead to O(n²) complexity",
      "suggestion": "Consider using HashSet, HashMap, or other O(1) lookup data structures",
      "metadata": {}
    },
    {
      "id": "480eace370587739",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 239,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "68935b780ff3636a",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 240,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "b07855a310a5b150",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 241,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "d1421d4af6168ca1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 252,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "230bf594c0bc91cf",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 260,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "44f1fa3d73198b93",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 268,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "dfbad471c6554fba",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/feature_extractor.rs",
      "line": 269,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2634de11d3e024c1",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 85,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "12a92131925f0d61",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 193,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0dbc21d40ef1d298",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 215,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "4c83605e5be1ffe9",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 254,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "bee26d24f2df2fc8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 346,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1b2dde92722e6ced",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 352,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "8c951cebd5565d31",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 354,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "724ef8a062013a15",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 357,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "127ee964214abf5f",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 398,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "ad0e2a605ef43418",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 408,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "611ea4e6fa825f90",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 427,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "409cb6f98c825dce",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 445,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a TODO comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "TODO"
      }
    },
    {
      "id": "4b60fef72c036dcc",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 459,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "e0a3219f62fc4a62",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 461,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "d5a294e0c19dbf3a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 465,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6cc7bb3a15aca45a",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 467,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "c0182c0aad06f2f3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 503,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6f71a3783d0eb8ee",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 511,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9cca6b3598d5c799",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 529,
      "column": null,
      "message": "Duplicate line found 4 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "192632012efe94a2",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 6,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "38e0ac479defc9f7",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 7,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "59195fb52886fa59",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 8,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "dcd0426b5c3a93e3",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 50,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "61311efa8c50e80b",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/mod.rs",
      "line": 68,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "6617b3481ef8ef50",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 68,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "f934fab3f935765c",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 84,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "f992b9f7441ee197",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 96,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "98935e50b6dfcc56",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 98,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "b9f8e6420a11a715",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 117,
      "column": null,
      "message": "Duplicate line found 5 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "57cea6459d6491d2",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 119,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "6d8b1aa009b133e9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 125,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "8f30bddeec869a21",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 131,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "8aaef7cc512e5a70",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 138,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "e3822de31a212308",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 145,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "7455f7b16ca23fd0",
      "analyzer": "non_production",
      "rule": "todo_comment",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 279,
      "column": null,
      "message": "TODO comment found",
      "description": "Line contains a todo comment that should be resolved before production",
      "suggestion": "Resolve the issue or create a proper issue tracker entry",
      "metadata": {
        "comment_type": "todo"
      }
    },
    {
      "id": "b240d6e52435325f",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 300,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "7fc73a3f08c84b1b",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/ml/training_data.rs",
      "line": 321,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "89a2ab30387861ed",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 25,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "31a42d158fd8c501",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 40,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "c9424cd8e152c6b7",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 47,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "5a2c6ca6250f4505",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 57,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2531637215f1279b",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 73,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "b2a2cd50b39f25d6",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 138,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "72a4213b5ea1f986",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 139,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "4990ec4537525f37",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 146,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "44acd0f47c982114",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 147,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "3f9d711f30d93a4f",
      "analyzer": "code_quality",
      "rule": "commented_code",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 157,
      "column": null,
      "message": "Commented-out code detected",
      "description": "Commented-out code clutters the codebase and should be removed",
      "suggestion": "Remove commented-out code; use version control to track changes",
      "metadata": {}
    },
    {
      "id": "b4444c6cffde81c9",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 164,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "1fc1058692f7ff25",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 173,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "0da757f589b0a9ff",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 179,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "d6feea7c768fe5e7",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 180,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "9b6c93fe8c64562b",
      "analyzer": "code_quality",
      "rule": "misplaced_import",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 181,
      "column": null,
      "message": "Import statement after non-import code",
      "description": "Imports should be grouped at the top of the file",
      "suggestion": "Move all imports to the top of the file",
      "metadata": {}
    },
    {
      "id": "65f67177e7dcffde",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 189,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "b6fc926cc7cd97e8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 211,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "5ae9f7cbdc672fbf",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 219,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2f085557b3152a51",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/streaming.rs",
      "line": 223,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "2ed12abd5f282b67",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 10,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "62b7759079927d49",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 79,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "51b57288570524d0",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 96,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "ceb2cc65ad7788f0",
      "analyzer": "performance",
      "rule": "unnecessary_clone",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/types.rs",
      "line": 97,
      "column": null,
      "message": "Potentially unnecessary clone() call",
      "description": "Cloning can be expensive; consider using references or borrowing",
      "suggestion": "Use references (&) or borrowing instead of cloning when possible",
      "metadata": {}
    },
    {
      "id": "2020fd174c7da81e",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/utils/git.rs",
      "line": 6,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "388577e37d9544e0",
      "analyzer": "code_quality",
      "rule": "duplicate_lines",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/utils/git.rs",
      "line": 10,
      "column": null,
      "message": "Duplicate line found 3 times",
      "description": "Duplicate lines indicate potential code duplication",
      "suggestion": "Consider extracting common logic into a shared function",
      "metadata": {}
    },
    {
      "id": "cf7b7cab9141c0e1",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/utils/progress.rs",
      "line": 25,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "07677540f65824f3",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/utils/progress.rs",
      "line": 29,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "9631a1b911800768",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 9,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "74999c5c4504b2a8",
      "analyzer": "code_quality",
      "rule": "magic_number",
      "severity": "Low",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 10,
      "column": null,
      "message": "Magic number detected",
      "description": "Magic numbers make code harder to understand and maintain",
      "suggestion": "Replace magic numbers with named constants",
      "metadata": {}
    },
    {
      "id": "291ae8fed3256d3b",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 216,
      "column": null,
      "message": "Long line detected (121 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "f106174e29bd0dc0",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 216,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "3cf6fed1c0845536",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/examples/enhanced-ml-demo.rs",
      "line": 218,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "916be1333dbbd9b4",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "Long line detected (133 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "a79bbb04a30a8b97",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "Long line (133 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "e9ea4bfcb7617165",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 30,
      "column": null,
      "message": "Long line (125 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "85ffa56035cef23f",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 57,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "4dc05bb21f8574be",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 87,
      "column": null,
      "message": "Long line (125 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "f75bdcdbd8e2007e",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 219,
      "column": null,
      "message": "Long line (123 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "23cbed6becd797b0",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 605,
      "column": null,
      "message": "Long line (124 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6720608c270e4e6b",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/code_quality_analyzer.rs",
      "line": 660,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "5f54b95dca5f8919",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 142,
      "column": null,
      "message": "Long line detected (127 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "97e4889bca78c3e9",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 142,
      "column": null,
      "message": "Long line (127 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "f1ae395ecb566512",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 148,
      "column": null,
      "message": "Long line (125 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "ad276253624556c4",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 168,
      "column": null,
      "message": "Long line (125 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "849f464f9820656f",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/dependency_analyzer.rs",
      "line": 185,
      "column": null,
      "message": "Long line (124 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "50738abbed9f37be",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 49,
      "column": null,
      "message": "Long line detected (127 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "5553399a403fbd7f",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 49,
      "column": null,
      "message": "Long line (127 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "9f3e66ef7f53ea18",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/non_production.rs",
      "line": 88,
      "column": null,
      "message": "Long line (124 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "750da6348ed3c9f3",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 34,
      "column": null,
      "message": "Long line detected (205 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "a4df86b6989d9de4",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/optimized_patterns.rs",
      "line": 34,
      "column": null,
      "message": "Long line (205 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "3a6523b6d65199d4",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 21,
      "column": null,
      "message": "Long line detected (149 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "5198a7b950f61cbb",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 21,
      "column": null,
      "message": "Long line (149 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "c3bd139dab89df42",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 23,
      "column": null,
      "message": "Long line (128 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6407386b014deec2",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 24,
      "column": null,
      "message": "Long line (153 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "5559df1f148a614f",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 25,
      "column": null,
      "message": "Long line (131 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "4e3a823b6fbab44c",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 26,
      "column": null,
      "message": "Long line (130 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "5ba06b26a48b6f8d",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 49,
      "column": null,
      "message": "Long line (144 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6269cdb594e5eb3a",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 50,
      "column": null,
      "message": "Long line (136 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "7a1de9f34f3aee27",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 65,
      "column": null,
      "message": "Long line (136 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6983baec7fdd8547",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 66,
      "column": null,
      "message": "Long line (128 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "4a07df43460803eb",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 82,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "c6d37941916256ab",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 98,
      "column": null,
      "message": "Long line (129 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6594b7eff6b13e67",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 114,
      "column": null,
      "message": "Long line (128 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6bc08a737d07ad39",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 115,
      "column": null,
      "message": "Long line (141 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "191becb6b43ed820",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/performance_analyzer.rs",
      "line": 419,
      "column": null,
      "message": "Long line (127 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6285e36ea8258729",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 157,
      "column": null,
      "message": "Long line detected (122 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "6706d1818d5c61f1",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/analyzers/security_analyzer.rs",
      "line": 157,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "a2f8a4b6ce006c50",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 342,
      "column": null,
      "message": "Long line detected (123 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "8dcbda88e5850609",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 342,
      "column": null,
      "message": "Long line (123 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "04e365a526e38a78",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 377,
      "column": null,
      "message": "Long line (134 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "6afcde2197d50531",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 491,
      "column": null,
      "message": "Long line (165 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "ab351f6d9aaf06d8",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 495,
      "column": null,
      "message": "Long line (147 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "80116cc27f74f9a7",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 534,
      "column": null,
      "message": "Long line (126 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "5519156cfd9d9039",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/gh_issue.rs",
      "line": 537,
      "column": null,
      "message": "Long line (143 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "45ccda99d92555c6",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 209,
      "column": null,
      "message": "Long line detected (122 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "436bb0cd1c159ff1",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/report.rs",
      "line": 209,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "3f34d91c574a38da",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 64,
      "column": null,
      "message": "Long line detected (134 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "1ffbd3a1cd6d4355",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 64,
      "column": null,
      "message": "Long line (134 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "a287d1a866ea6ac1",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/cli/train.rs",
      "line": 114,
      "column": null,
      "message": "Long line (125 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "f5f87005f80b3fd3",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 347,
      "column": null,
      "message": "Long line detected (138 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "0f1b14b5f0f132c9",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 347,
      "column": null,
      "message": "Long line (138 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "da56aeb25bead979",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 349,
      "column": null,
      "message": "Long line (129 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "c316b4872d513c12",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 398,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "c9a96b45fa39e928",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 403,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "bcf877ee4d213336",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 421,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "f2898ef350adb27d",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 422,
      "column": null,
      "message": "Long line (177 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "4ca00fb56b43f238",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 440,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "fa8b17c1e38b1e15",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 441,
      "column": null,
      "message": "Long line (177 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "a5107306c82947f1",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 477,
      "column": null,
      "message": "Long line (122 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "03b6bda10e5006ba",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/ml/metrics.rs",
      "line": 520,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    },
    {
      "id": "b89ee69de229f5e3",
      "analyzer": "performance",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 8,
      "column": null,
      "message": "Long line detected (121 characters)",
      "description": "Very long lines can impact readability and code review efficiency",
      "suggestion": "Consider breaking long lines for better readability",
      "metadata": {}
    },
    {
      "id": "7ffbd3cfac782b28",
      "analyzer": "code_quality",
      "rule": "long_line",
      "severity": "Info",
      "file": "/workspaces/do-codeguardian/src/utils/security.rs",
      "line": 8,
      "column": null,
      "message": "Long line (121 characters)",
      "description": "Long lines reduce readability and can indicate complex logic",
      "suggestion": "Break long lines into multiple lines or simplify the expression",
      "metadata": {}
    }
  ],
  "summary": {
    "total_files_scanned": 60,
    "total_findings": 1418,
    "findings_by_severity": {
      "Low": 406,
      "Info": 63,
      "Medium": 779,
      "High": 157,
      "Critical": 13
    },
    "findings_by_analyzer": {
      "code_quality": 758,
      "non_production": 386,
      "performance": 236,
      "security": 38
    },
    "scan_duration_ms": 11284
  },
  "config_hash": "063df732c3ec1222",
  "timestamp": "2025-08-18T07:57:57.269878872Z"
}