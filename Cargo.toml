[package]
name = "do-codeguardian"
version = "0.2.1-alpha.1"
edition = "2021"
authors = ["Dominik Oswald <6849456+d-oit@users.noreply.github.com>"]
description = "CodeGuardian is a cutting-edge, security-first code analysis tool that combines machine learning, advanced static analysis, and seamless GitHub integration to help developers identify vulnerabilities, optimize performance, and maintain high code quality standards. Built with Rust for speed and reliability, it empowers teams to ship secure software faster."
license = "MIT"
repository = "https://github.com/d-oit/do-codeguardian"
homepage = "https://github.com/d-oit/do-codeguardian"
documentation = "https://github.com/d-oit/do-codeguardian/docs"
readme = "README.md"
keywords = ["security", "analysis", "git", "cli", "code-quality", "ai", "validation", "production"]
categories = ["command-line-utilities", "development-tools", "security"]
exclude = ["target/", "benches/", "build/", "uat_test_files/", "scripts/"]
build = "build.rs"

[features]
default = ["git", "security", "logging"]
git = ["git2"]
security = ["regex"]
logging = ["tracing", "tracing-subscriber"]
hashing = []
cargo-audit = ["dep:cargo-audit"]
ml = ["fann"]
ast = ["syn", "quote", "proc-macro2"]
ml-enhanced = ["ml", "ast"]
dashboard = ["axum", "tower", "tower-http"]

# Fast development build - minimal features
dev = ["git", "security", "logging"]
# Fast test build - minimal features for testing
test-fast = ["git", "security"]
# Full features for CI/release
full = ["git", "security", "logging", "hashing", "cargo-audit", "ml", "ast"]

[dependencies]
# CLI and async runtime - use minimal features for faster builds
clap = { version = "4.5", features = ["derive"] }
tokio = { version = "1.40.0", features = ["rt-multi-thread", "macros", "fs", "process"] }
futures-util = "0.3"

# Serialization and configuration
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.9"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Git operations
git2 = { version = "0.20", optional = true }

# Logging - minimal features
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = ["env-filter"] }

# HTTP client - minimal features for faster builds
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Web framework for dashboard (optional)
axum = { version = "0.7", optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["cors", "fs"], optional = true }
axum-test = { version = "15.0", optional = true }

# Regular expressions and pattern matching
regex = { version = "1.10", optional = true }

# Directory traversal
walkdir = "2.5"

# File hashing
sha2 = "0.10"
blake3 = "1.5"

# Parallel processing
rayon = "1.10"

# Additional utilities
chrono = { version = "0.4", features = ["serde"] }
lazy_static = "1.5"
once_cell = "1.20"
indicatif = "0.18"
num_cpus = "1.16"
serde_yaml = "0.9"
is-terminal = "0.4"
base64 = "0.22"
async-trait = "0.1"
urlencoding = "2.1"
html-escape = "0.2"
flate2 = "1.0"
tempfile = "3.10"
uuid = { version = "1.6", features = ["v4", "serde"] }

# Machine Learning
fann = { version = "0.1", optional = true }

# AST Analysis - full features for AST parsing and visiting
syn = { version = "2.0", features = ["parsing", "printing", "full", "visit"], optional = true }
quote = { version = "1.0", optional = true }
proc-macro2 = { version = "1.0", optional = true }

# Dependency analysis
cargo_metadata = "0.22"
cargo-audit = { version = "0.21", optional = true }
memmap2 = "0.9.8"

# Full-text search indexing (using standard library for now)
# tantivy = "0.19"  # Commented out due to dependency conflicts

[dev-dependencies]
# Testing utilities - optimized for speed
tempfile = "3.10"
assert_cmd = { version = "2.0", default-features = false }
predicates = { version = "3.1", default-features = false }
criterion = { version = "0.7", default-features = false }

# Mocking and fixtures - minimal features
mockito = { version = "1.5", default-features = false }
fake = { version = "4.4", default-features = false }

# Development tools
cargo-husky = { version = "1", default-features = false, features = ["precommit-hook", "run-cargo-clippy", "run-cargo-fmt"] }

# Property-based testing
proptest = "1.5"

# Futures utilities for async testing
futures = "0.3"

# Random number generation for load testing
rand = "0.8"

# Additional testing utilities for comprehensive coverage
tokio-test = "0.4"
serial_test = "3.1"

# Benchmarking
divan = "0.1"

# Tokio with test utilities for testing - optimized features
tokio = { version = "1.40.0", features = ["test-util", "fs", "rt-multi-thread"] }

[[bench]]
name = "hashing_benchmark"
harness = false

[[bench]]
name = "optimization_benchmarks"
harness = false

[[bench]]
name = "performance_benchmark"
harness = false

[[bench]]
name = "scanning_benchmark"
harness = false

[[bench]]
name = "performance_regression_suite"
harness = false

[[bench]]
name = "load_testing_benchmark"
harness = false

[[bench]]
name = "performance_metrics_benchmark"
harness = false

[[bench]]
name = "optimization_recommendations_benchmark"
harness = false

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true
# Faster incremental builds
incremental = true

[profile.dev-fast]
inherits = "dev"
opt-level = 1
debug = false
overflow-checks = false
lto = false
codegen-units = 16
incremental = true

[profile.bench]
opt-level = 3
debug = false
lto = true

[profile.test]
opt-level = 2
debug = false
overflow-checks = false
lto = "thin"
codegen-units = 1
incremental = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
