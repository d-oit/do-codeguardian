[package]
name = "do-codeguardian"
version = "0.1.0"
edition = "2021"
authors = ["Dominik Oswald <6849456+d-oit@users.noreply.github.com>"]
description = "CodeGuardian is a cutting-edge, security-first code analysis tool that combines machine learning, advanced static analysis, and seamless GitHub integration to help developers identify vulnerabilities, optimize performance, and maintain high code quality standards. Built with Rust for speed and reliability, it empowers teams to ship secure software faster."
license = "MIT"
repository = "https://github.com/d-oit/do-codeguardian"
homepage = "https://github.com/d-oit/do-codeguardian"
documentation = "https://github.com/d-oit/do-codeguardian/docs"
readme = "README.md"
keywords = ["security", "analysis", "git", "cli", "code-quality", "ai", "validation", "production"]
categories = ["command-line-utilities", "development-tools", "security"]
exclude = ["target/", "benches/", "tests/fixtures/", "examples/ml-training-example.rs"]
build = "build.rs"

[features]
default = ["git", "security", "logging", "cargo-audit"]
git = ["git2"]
security = ["regex"]
logging = ["tracing", "tracing-subscriber"]
hashing = []
cargo-audit = ["dep:cargo-audit"]
ml = ["fann"]
ast = ["syn", "quote", "proc-macro2"]
ml-enhanced = ["ml", "ast"]

# Enable all features for development
full = ["git", "security", "logging", "hashing", "cargo-audit", "ml", "ast"]

[dependencies]
# CLI and async runtime
clap = { version = "4.4", features = ["derive", "color", "suggestions"] }
tokio = { version = "1.40.0", features = ["full"] }

# Serialization and configuration
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.9"

# Error handling
anyhow = "1.0"
thiserror = "2.0"

# Git operations
git2 = { version = "0.20", optional = true }

# Logging
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = ["env-filter"] }

# HTTP client
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }

# Regular expressions and pattern matching
regex = { version = "1.10", optional = true }

# Directory traversal
walkdir = "2.4"

# File hashing
sha2 = "0.10"
blake3 = "1.5"

# Parallel processing
rayon = "1.8"

# Additional utilities
uuid = { version = "1.6", features = ["v4"] }
chrono = { version = "0.4", features = ["serde"] }
lazy_static = "1.4"
once_cell = "1.19"
indicatif = "0.18"
num_cpus = "1.16"
serde_yaml = "0.9"
is-terminal = "0.4"

# Machine Learning
fann = { version = "0.1", optional = true }

# AST Analysis for enhanced feature engineering
syn = { version = "2.0", features = ["full", "extra-traits", "visit"], optional = true }
quote = { version = "1.0", optional = true }
proc-macro2 = { version = "1.0", optional = true }

# Dependency analysis
cargo_metadata = "0.22"
cargo-audit = { version = "0.21", optional = true }

[dev-dependencies]
# Testing utilities
tempfile = "3.8"
assert_cmd = "2.0"
predicates = "3.0"
criterion = "0.7"

# Mocking and fixtures
mockito = "1.2"
fake = "4.4"

# Development tools
cargo-husky = { version = "1", default-features = false, features = ["precommit-hook", "run-cargo-clippy", "run-cargo-fmt"] }

# Property-based testing
proptest = "1.4"

# Benchmarking
divan = "0.1"

# Tokio with test utilities for testing
tokio = { version = "1.40.0", features = ["test-util"] }

# Code coverage (install separately: cargo install cargo-tarpaulin)
# tarpaulin = "0.27"

[[bench]]
name = "hashing_benchmark"
harness = false

[[bench]]
name = "optimization_benchmarks"
harness = false

[[bench]]
name = "performance_benchmark"
harness = false

[[bench]]
name = "scanning_benchmark"
harness = false




[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

[profile.bench]
opt-level = 3
debug = false
lto = true

[profile.test]
opt-level = 0
debug = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[badges]
maintenance = { status = "actively-developed" }
