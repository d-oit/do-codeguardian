[graph]
# The path of the adjacent Cargo.toml to use as the root of the graph
targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "x86_64-apple-darwin" },
    { triple = "x86_64-pc-windows-msvc" },
    { triple = "aarch64-unknown-linux-gnu" },
]

[advisories]
version = 2
# A list of advisory IDs to ignore
ignore = [
    #"RUSTSEC-0000-0000",
]


[licenses]
version = 2
# List of explicitly allowed licenses
# https://spdx.org/licenses/
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "Unicode-3.0",
    "CC0-1.0",
    "0BSD",
    "Zlib",
    "BSL-1.0",
    "MPL-2.0",
    "GPL-2.0-only",
    "GPL-2.0-or-later",
    "LGPL-2.1-only",
    "LGPL-2.1-or-later",
    "CDLA-Permissive-2.0",
]

# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses
# * both - The license will be approved if it is both OSI-approved *AND* FSF approved
# * either - The license will be approved if it is either OSI-approved *OR* FSF approved
# * osi - The license will be approved if it is OSI-approved *OR* FSF approved
# * fsf - The license will be approved if it is FSF approved
# * neither - The license will be approved if it is *NEITHER* OSI-approved *NOR* FSF approved
confidence-threshold = 0.8



# Lint level for when no license is detected

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
highlight = "all"
# The default lint level if no other predicates are matched
allow = [
    #{ name = "ansi_term", version = "*" },
]
deny = [
    # Each entry the name of a crate and a version range. If version is
    # not specified, all versions will be matched.
    #{ name = "ansi_term", version = "*" },
]
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    #{ name = "ansi_term", version = "*" },
]
# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely
skip-tree = [
    #{ name = "ansi_term", version = "*" },
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"
# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []
